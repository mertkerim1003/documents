{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Project SOTAS","title":"Project SOTAS"},{"location":"#project_sotas","text":"","title":"Project SOTAS"},{"location":"devops/","text":"SOTAS DevOps Dok\u00fcmantasyonu Nedir bu DevOps? DevOps, fikirlerin production'a deploylanmas\u0131ndan \u00e7\u0131kan problemlerden ders al\u0131nmas\u0131na kadarki s\u00fcre\u00e7tir. Neden DevOps? Bir projeyi master branch \u00fczerinde bir commit ile tamamlamak her ne kadar cazip g\u00f6z\u00fcksede bizce bir katliamd\u0131r. Bir projeyi ekip halinde ger\u00e7ekle\u015ftirecek ve ya\u015fatmaya devam edeceksek kimin ne yapaca\u011f\u0131, nas\u0131l yapaca\u011f\u0131 ve neler olaca\u011f\u0131 \u00e7ok \u00f6nemlidir. DevOps bu noktada bize yard\u0131mc\u0131 olmaktad\u0131r. 0'dan Sonuca S\u00fcre\u00e7 Issue Olu\u015fturma Geli\u015ftirmek veya eklenmek istenen \u00f6zellik hakk\u0131nda halihaz\u0131rda bulunan issue templatelerinden yararlanarak detayl\u0131 bir issue olu\u015fturulmal\u0131d\u0131r. Olu\u015fturulan issue: En az 1 ki\u015fiye atanmal\u0131 Uygun label'\u0131 i\u00e7ermeli Bir projeye ba\u011flanmal\u0131 Uygun milestone'a ba\u011flanmal\u0131 Issue \u00dczerinde \u00c7al\u0131\u015fmaya Ba\u015flama \u00dczerinde \u00e7al\u0131\u015fmak istedi\u011finiz issue'yu ilk olarak proje i\u00e7erisinde Todo 'dan In Progress 'e al\u0131nmal\u0131d\u0131r ki ekibin kimin ne \u015fu anda ne yapt\u0131\u011f\u0131yla ilgili genel bir fikri olabilsin. E\u011fer bu issue ile ilk defa \u00e7al\u0131\u015fmaya ba\u015fland\u0131ysa ona ait bir branch olu\u015fturulmal\u0131. Branch ad\u0131 dok\u00fcmantasyonlar i\u00e7in doc-issueKodu , frontend i\u00e7in f-issueKodu ve backend i\u00e7in b-issueKodu olmal\u0131d\u0131r. Issue kodlar\u0131 ba\u015fl\u0131\u011f\u0131n yan\u0131nda bulunan # i\u015faretiyle ba\u015flayan say\u0131lard\u0131r. Testler Projelerin can damar\u0131 olan testler koda giri\u015fmeden \u00f6nce belirlenmeli ve yaz\u0131lmal\u0131d\u0131r. Yaz\u0131lm\u0131\u015f olan testler kar\u015f\u0131land\u0131\u011f\u0131nda pull request a\u00e7\u0131labilir ve kimsenin kodu etkilenmeden s\u00fcrece devam edilebilir. Yap\u0131lan \u00c7al\u0131\u015fmada \u0130lerleme Yap\u0131lan geli\u015ftirme hangi konu ile ilgili olursa olsun mutlaka k\u00fc\u00e7\u00fck commitler at\u0131larak ilerlenmelidir. B\u00f6ylelikle herhangi bir sorunda geriye d\u00f6n\u00fc\u015f kolayla\u015fm\u0131\u015f oluyor. Issue i\u00e7in belirlenmi\u015f hedefleri kar\u015f\u0131lad\u0131\u011f\u0131n\u0131zda da ekip liderinizin branchine olacak \u015fekilde veya ihtiyaca g\u00f6re master'a olacak \u015fekilde ekip liderinizi reviewer olarak i\u015faretleyip pull request olu\u015fturmal\u0131s\u0131n\u0131z. Pull request a\u00e7t\u0131\u011f\u0131n\u0131zda otomatik olarak kodunuz test edilir ve sistem taraf\u0131ndan uygun olup olmad\u0131\u011f\u0131na karar verilir. Sistemin uygun g\u00f6rmedi\u011fi pull requestler tekrardan incelenmeli ve hatalar\u0131 d\u00fczeltildikten sonra tekrar olu\u015fturulmal\u0131d\u0131r. Code Review Code review s\u00fcrecinde tamamlam\u0131\u015f oldu\u011funuz i\u015f ekip liderinizce kontrol edilir ve uygun g\u00f6r\u00fcl\u00fcrse gerekli branch'e eklenir. Kodu inceleyecek ki\u015finin kodu anlayabilmesi de sa\u011fl\u0131kl\u0131 ilerleyebilmek i\u00e7in \u00e7ok kritiktir. Bu noktada temiz ve anla\u015f\u0131l\u0131r kod yazmak \u00f6nemlidir. Onaylanm\u0131\u015f olmas\u0131na ra\u011fmen ileriki s\u00fcre\u00e7te hata \u00e7\u0131karan pull requestlerin sorumlulu\u011fu code review yapan ki\u015fiyle pull request iste\u011fini a\u00e7an ki\u015fidedir. Bu sebeple kodlar\u0131 inceleyecek arkada\u015flar\u0131n emin olduktan sonra merge etmeleri kendileri i\u00e7in ve proje i\u00e7in b\u00fcy\u00fck \u00f6neme sahiptir. Deployment Her repositorynin master (veya main) branch'i o projenin son halini temsil eder ve \u00e7al\u0131\u015fabilir durumda olmal\u0131d\u0131r. Otomatik deployment sayesinde ana branchlerde bir de\u011fi\u015fiklik yap\u0131ld\u0131\u011f\u0131nda demo sunucular\u0131na deploy edilir.","title":"SOTAS DevOps Dok\u00fcmantasyonu"},{"location":"devops/#sotas_devops_dokumantasyonu","text":"","title":"SOTAS DevOps Dok\u00fcmantasyonu"},{"location":"devops/#nedir_bu_devops","text":"DevOps, fikirlerin production'a deploylanmas\u0131ndan \u00e7\u0131kan problemlerden ders al\u0131nmas\u0131na kadarki s\u00fcre\u00e7tir.","title":"Nedir bu DevOps?"},{"location":"devops/#neden_devops","text":"Bir projeyi master branch \u00fczerinde bir commit ile tamamlamak her ne kadar cazip g\u00f6z\u00fcksede bizce bir katliamd\u0131r. Bir projeyi ekip halinde ger\u00e7ekle\u015ftirecek ve ya\u015fatmaya devam edeceksek kimin ne yapaca\u011f\u0131, nas\u0131l yapaca\u011f\u0131 ve neler olaca\u011f\u0131 \u00e7ok \u00f6nemlidir. DevOps bu noktada bize yard\u0131mc\u0131 olmaktad\u0131r.","title":"Neden DevOps?"},{"location":"devops/#0dan_sonuca_surec","text":"","title":"0'dan Sonuca S\u00fcre\u00e7"},{"location":"devops/#issue_olusturma","text":"Geli\u015ftirmek veya eklenmek istenen \u00f6zellik hakk\u0131nda halihaz\u0131rda bulunan issue templatelerinden yararlanarak detayl\u0131 bir issue olu\u015fturulmal\u0131d\u0131r. Olu\u015fturulan issue: En az 1 ki\u015fiye atanmal\u0131 Uygun label'\u0131 i\u00e7ermeli Bir projeye ba\u011flanmal\u0131 Uygun milestone'a ba\u011flanmal\u0131","title":"Issue Olu\u015fturma"},{"location":"devops/#issue_uzerinde_calsmaya_baslama","text":"\u00dczerinde \u00e7al\u0131\u015fmak istedi\u011finiz issue'yu ilk olarak proje i\u00e7erisinde Todo 'dan In Progress 'e al\u0131nmal\u0131d\u0131r ki ekibin kimin ne \u015fu anda ne yapt\u0131\u011f\u0131yla ilgili genel bir fikri olabilsin. E\u011fer bu issue ile ilk defa \u00e7al\u0131\u015fmaya ba\u015fland\u0131ysa ona ait bir branch olu\u015fturulmal\u0131. Branch ad\u0131 dok\u00fcmantasyonlar i\u00e7in doc-issueKodu , frontend i\u00e7in f-issueKodu ve backend i\u00e7in b-issueKodu olmal\u0131d\u0131r. Issue kodlar\u0131 ba\u015fl\u0131\u011f\u0131n yan\u0131nda bulunan # i\u015faretiyle ba\u015flayan say\u0131lard\u0131r.","title":"Issue \u00dczerinde \u00c7al\u0131\u015fmaya Ba\u015flama"},{"location":"devops/#testler","text":"Projelerin can damar\u0131 olan testler koda giri\u015fmeden \u00f6nce belirlenmeli ve yaz\u0131lmal\u0131d\u0131r. Yaz\u0131lm\u0131\u015f olan testler kar\u015f\u0131land\u0131\u011f\u0131nda pull request a\u00e7\u0131labilir ve kimsenin kodu etkilenmeden s\u00fcrece devam edilebilir.","title":"Testler"},{"location":"devops/#yaplan_calsmada_ilerleme","text":"Yap\u0131lan geli\u015ftirme hangi konu ile ilgili olursa olsun mutlaka k\u00fc\u00e7\u00fck commitler at\u0131larak ilerlenmelidir. B\u00f6ylelikle herhangi bir sorunda geriye d\u00f6n\u00fc\u015f kolayla\u015fm\u0131\u015f oluyor. Issue i\u00e7in belirlenmi\u015f hedefleri kar\u015f\u0131lad\u0131\u011f\u0131n\u0131zda da ekip liderinizin branchine olacak \u015fekilde veya ihtiyaca g\u00f6re master'a olacak \u015fekilde ekip liderinizi reviewer olarak i\u015faretleyip pull request olu\u015fturmal\u0131s\u0131n\u0131z. Pull request a\u00e7t\u0131\u011f\u0131n\u0131zda otomatik olarak kodunuz test edilir ve sistem taraf\u0131ndan uygun olup olmad\u0131\u011f\u0131na karar verilir. Sistemin uygun g\u00f6rmedi\u011fi pull requestler tekrardan incelenmeli ve hatalar\u0131 d\u00fczeltildikten sonra tekrar olu\u015fturulmal\u0131d\u0131r.","title":"Yap\u0131lan \u00c7al\u0131\u015fmada \u0130lerleme"},{"location":"devops/#code_review","text":"Code review s\u00fcrecinde tamamlam\u0131\u015f oldu\u011funuz i\u015f ekip liderinizce kontrol edilir ve uygun g\u00f6r\u00fcl\u00fcrse gerekli branch'e eklenir. Kodu inceleyecek ki\u015finin kodu anlayabilmesi de sa\u011fl\u0131kl\u0131 ilerleyebilmek i\u00e7in \u00e7ok kritiktir. Bu noktada temiz ve anla\u015f\u0131l\u0131r kod yazmak \u00f6nemlidir. Onaylanm\u0131\u015f olmas\u0131na ra\u011fmen ileriki s\u00fcre\u00e7te hata \u00e7\u0131karan pull requestlerin sorumlulu\u011fu code review yapan ki\u015fiyle pull request iste\u011fini a\u00e7an ki\u015fidedir. Bu sebeple kodlar\u0131 inceleyecek arkada\u015flar\u0131n emin olduktan sonra merge etmeleri kendileri i\u00e7in ve proje i\u00e7in b\u00fcy\u00fck \u00f6neme sahiptir.","title":"Code Review"},{"location":"devops/#deployment","text":"Her repositorynin master (veya main) branch'i o projenin son halini temsil eder ve \u00e7al\u0131\u015fabilir durumda olmal\u0131d\u0131r. Otomatik deployment sayesinde ana branchlerde bir de\u011fi\u015fiklik yap\u0131ld\u0131\u011f\u0131nda demo sunucular\u0131na deploy edilir.","title":"Deployment"},{"location":"ekip-seklinde-kod-yazma/","text":"Ekip \u015eeklinde Nas\u0131l Kod Yaz\u0131l\u0131r? Bu rehber t\u00fcm yaz\u0131l\u0131m alanlar\u0131 i\u00e7in ge\u00e7erli olup projeye katk\u0131 sa\u011flamak isteyen herkesin okumas\u0131 ve anlamas\u0131 gerekmektedir. Kendinize projeler sayfas\u0131ndan bir issue se\u00e7in Se\u00e7mi\u015f oldu\u011funuz issue'yu Todo 'dan In Progress 'e al\u0131n Issue'nun bulundu\u011fu repository'i cihaz\u0131n\u0131za klonlay\u0131n (bu i\u015flemi daha \u00f6nce yapt\u0131ysan\u0131z tekrarlaman\u0131za gerek yoktur) G\u00fcncellemeleri alabilmek i\u00e7in projenin i\u00e7erisinde git pull komutunu \u00e7al\u0131\u015ft\u0131r\u0131n E\u011fer Frontend ekibinde yer al\u0131yorsan\u0131z f-issue kodu olacak \u015fekilde (\u00f6r: 5 numaral\u0131 issue i\u00e7in f-5), Backend ekibinde yer al\u0131yorsan\u0131z b-issue kodu olacak \u015fekilde branch olu\u015fturun \u00dczerinde \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131z issue i\u00e7in ilk olarak testlerinizi yaz\u0131n Yazm\u0131\u015f oldu\u011funuz testlerinizi kar\u015f\u0131layan kodlar\u0131n\u0131z\u0131 yaz\u0131n E\u011fer t\u00fcm testleriniz ve ge\u00e7mi\u015f testler hatas\u0131zca \u00e7al\u0131\u015f\u0131yorsa ekibinizin branchine ekip liderinizi reviewer olarak ekleyip pull request olu\u015fturun Ekip lideriniz kodunuzu onaylarsa branchiniz ekip branchinize mergelenecek","title":"Ekip \u015eeklinde Nas\u0131l Kod Yaz\u0131l\u0131r?"},{"location":"ekip-seklinde-kod-yazma/#ekip_seklinde_nasl_kod_yazlr","text":"Bu rehber t\u00fcm yaz\u0131l\u0131m alanlar\u0131 i\u00e7in ge\u00e7erli olup projeye katk\u0131 sa\u011flamak isteyen herkesin okumas\u0131 ve anlamas\u0131 gerekmektedir. Kendinize projeler sayfas\u0131ndan bir issue se\u00e7in Se\u00e7mi\u015f oldu\u011funuz issue'yu Todo 'dan In Progress 'e al\u0131n Issue'nun bulundu\u011fu repository'i cihaz\u0131n\u0131za klonlay\u0131n (bu i\u015flemi daha \u00f6nce yapt\u0131ysan\u0131z tekrarlaman\u0131za gerek yoktur) G\u00fcncellemeleri alabilmek i\u00e7in projenin i\u00e7erisinde git pull komutunu \u00e7al\u0131\u015ft\u0131r\u0131n E\u011fer Frontend ekibinde yer al\u0131yorsan\u0131z f-issue kodu olacak \u015fekilde (\u00f6r: 5 numaral\u0131 issue i\u00e7in f-5), Backend ekibinde yer al\u0131yorsan\u0131z b-issue kodu olacak \u015fekilde branch olu\u015fturun \u00dczerinde \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131z issue i\u00e7in ilk olarak testlerinizi yaz\u0131n Yazm\u0131\u015f oldu\u011funuz testlerinizi kar\u015f\u0131layan kodlar\u0131n\u0131z\u0131 yaz\u0131n E\u011fer t\u00fcm testleriniz ve ge\u00e7mi\u015f testler hatas\u0131zca \u00e7al\u0131\u015f\u0131yorsa ekibinizin branchine ekip liderinizi reviewer olarak ekleyip pull request olu\u015fturun Ekip lideriniz kodunuzu onaylarsa branchiniz ekip branchinize mergelenecek","title":"Ekip \u015eeklinde Nas\u0131l Kod Yaz\u0131l\u0131r?"},{"location":"git-kullanimi/","text":"Git Kullan\u0131m\u0131 Projede Git ve GitHub kullan\u0131m\u0131 i\u00e7in \u00e7ekti\u011fimiz videoyu izleyebilir ve/veya a\u015fa\u011f\u0131daki yaz\u0131l\u0131 k\u0131lavuzu takip edebilirsin. Git ve Github Kullan\u0131m\u0131 Videosu Git Kurulumu Bilgisayar\u0131n\u0131zda Git kurulu de\u011filse git-scm.com/downloads adresinden i\u015fletim sisteminize uygun \u015fekilde kurulum ad\u0131mlar\u0131n\u0131 takip ederek kurulumu yapman\u0131z gerekiyor. Windows kullan\u0131c\u0131lar\u0131 terminal gerektiren i\u015fleri PowerShell veya sorun \u00e7\u0131kar\u0131rsa Git Bash (Git kurulumunda y\u00fckleniyor) kullanarak ad\u0131mlar\u0131 ger\u00e7ekle\u015ftirebilir. SSH Key Olu\u015fturma & GitHub'a Ekleme GitHub'a commit g\u00f6nderirken g\u00fcvenlik i\u00e7in SSH anahtar\u0131n\u0131z olmas\u0131 ve bu anahtar\u0131n GitHub hesab\u0131n\u0131za tan\u0131ml\u0131 olmas\u0131 gerekmektedir. Bu ad\u0131mlar Linux i\u00e7in yaz\u0131lm\u0131\u015ft\u0131r.\\ \\ A\u015fa\u011f\u0131da anlat\u0131lacak ad\u0131mlarda Windows i\u00e7in birka\u00e7 de\u011fi\u015fiklikleri oldu\u011fundan dolay\u0131 Windows komutlar\u0131n\u0131 https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent kaynaktan kontrol ederek ilerlerseniz olas\u0131 hatalar\u0131 engellemi\u015f olursunuz. Ad\u0131m 1: Terminali a\u00e7 Ad\u0131m 2: SSH anahtar\u0131n\u0131z\u0131 olu\u015fturmak i\u00e7in terminalde kodu \u00e7al\u0131\u015ft\u0131r $ ssh-keygen -t ed25519 -C `GitHub Email Adresiniz` > Generating public/private ed25519 key pair. > Enter file in which to save the key (/home/z3k/.ssh/id_ed25519): [Enter'a bas] SSH key kullan\u0131l\u0131rken g\u00fcvenlik i\u00e7in istenecek parolay\u0131 belirle Parola yaz\u0131l\u0131rken g\u00fcvenlik i\u00e7in ekranda g\u00f6z\u00fckmez > Enter passphrase (empty for no passphrase): [Parolay\u0131 Gir] > Enter same passphrase again: [Parolay\u0131 Tekrar Gir] Ad\u0131m 3: Olu\u015fturulan public ve private keylerin nereye kaydedildi\u011fine iyi bak\u0131n. Ad\u0131m 2'de hi\u00e7bir \u015fey yazmadan Enter'a bast\u0131ysan\u0131z varsay\u0131lan adrese (Linux i\u00e7in /home/username/.ssh/ , Windows i\u00e7in /c/Users/username/.ssh/ ) kaydedilir. > Your identification has been saved in /home/z3k/.ssh/id_ed25519 > Your public key has been saved in /home/z3k/.ssh/id_ed25519.pub Ad\u0131m 4: ssh-agent'\u0131 komut ile \u00e7al\u0131\u015ft\u0131r $ eval \"$(ssh-agent -s)\" Ad\u0131m 5: SSH anahtar\u0131n\u0131z\u0131 bilgisayara tan\u0131t\u0131n. Ad\u0131m 2'de dosya ad\u0131n\u0131 ve/veya yolunu de\u011fi\u015ftirdiyseniz komutta da ilgili yeri de\u011fi\u015ftirmeniz gerekir $ ssh-add ~/.ssh/id_ed25519 Ad\u0131m 2'de verdi\u011fin parolay\u0131 gir > Enter passphrase for /home/z3k/.ssh/id_ed25519: [Parolay\u0131 Gir] > Identity added: /home/z3k/.ssh/id_ed25519 (zekeriya@zekeriyaay.com) Ad\u0131m 6: SSH anahtar\u0131m\u0131z\u0131 GitHub hesab\u0131m\u0131za ba\u011flamak i\u00e7in https://github.com/settings/keys adresine veya GitHub Settings -> SSH and GPG keys sayfas\u0131na gir Ad\u0131m 7: New SSH key butonuna t\u0131kla Ad\u0131m 8: Title k\u0131sm\u0131na hangi bilgisayarda kulland\u0131\u011f\u0131n\u0131 hat\u0131rlayaca\u011f\u0131n ba\u015fl\u0131k ekle Ad\u0131m 9: Olu\u015fturdu\u011fun SSH anahtar\u0131n\u0131n .pub uzant\u0131l\u0131 olan dosyas\u0131n\u0131 text edit\u00f6r ile a\u00e7 veya terminalden a\u015fa\u011f\u0131daki komut ile i\u00e7eri\u011fini yazd\u0131r Dosya konumu ve/veya ad\u0131n\u0131 de\u011fi\u015ftirdiysen komutta g\u00fcncelle $ cat ~/.ssh/id_ed25519.pub > ssh-ed25519 ************* [zekeriya@zekeriyaay.com] Ad\u0131m 10: Key k\u0131sm\u0131na Ad\u0131m 9'daki anahtar \u00e7\u0131kt\u0131s\u0131n\u0131 yap\u0131\u015ft\u0131r ve Add SSH key butonuna basarak kaydet Repoyu Klonlama \u00c7al\u0131\u015faca\u011f\u0131n repoyu bilgisayar\u0131na klonla $ git clone git@github.com:ProjectSOTAS/<REPO_ADI>.git SSH anahtar\u0131m\u0131z i\u00e7in parola isterse parolay\u0131 gir $ cd <REPO_ADI> Yeni Branch A\u00e7ma $ git switch -c <BRANCH_ADI> Mevcut branch'i kontrol edin $ git branch De\u011fi\u015fiklikleri Yay\u0131nlama Dosyalardaki de\u011fi\u015fiklikleri kontrol etmek i\u00e7in $ git status Commit at\u0131lacak de\u011fi\u015fiklikleri se\u00e7in $ git add <DE\u011e\u0130\u015e\u0130KL\u0130K_DOSYA_ADI> Se\u00e7ilen de\u011fi\u015fikliklere commit ekle $ git commit -m \"COMMIT MESAJI\" E\u011fer ilk defa commit ekliyorsan\u0131z config ayarlar\u0131 olmad\u0131\u011f\u0131 i\u00e7in hata verecek $ git config --global user.email <GITHUB_MAIL_ADRESIN> $ git config --global user.name <GITHUB_ADIN> Eklenen commitleri yay\u0131nlay\u0131n $ git push E\u011fer kulland\u0131\u011f\u0131n\u0131z branch'i daha \u00f6nceden yay\u0131nlamad\u0131ysan\u0131z hata verecek $ git push --set-upstream origin <BRANCH_ADI> Pul Request A\u00e7ma Ad\u0131m 1: Taray\u0131c\u0131da repoyu a\u00e7t\u0131\u011f\u0131n\u0131zda Compare & pull request butonuna t\u0131klayarak yay\u0131nlad\u0131\u011f\u0131n\u0131z branch i\u00e7in pr a\u00e7\u0131n Ad\u0131m 2: PR i\u00e7in issue ile ilgili ba\u015fl\u0131k ekle Ad\u0131m 3: A\u00e7\u0131klama k\u0131sm\u0131na #<ISSUE_NO> ve gerekli a\u00e7\u0131klamalar\u0131 yaz Ad\u0131m 4: Reviewers k\u0131sm\u0131na PR'\u0131 onaylayacak ekip liderini ekle Ad\u0131m 5: Projects k\u0131sm\u0131na issue'nun bulundu\u011fu projeyi se\u00e7 Ad\u0131m 6: Her\u015fey haz\u0131r ise Create pull request butonuna bas Ad\u0131m 7: Eklenen de\u011fi\u015fikliklerin hangi issue i\u00e7in oldu\u011funu Linked issues k\u0131sm\u0131nda se\u00e7 Ad\u0131m 8: Geriye sadece ekip liderinin, a\u00e7t\u0131\u011f\u0131n PR'\u0131 inceleyip merge etmesi kal\u0131yor. Senin ba\u015fka i\u015fin kalmad\u0131. Te\u015fekk\u00fcrler...","title":"Git Kullan\u0131m\u0131"},{"location":"git-kullanimi/#git_kullanm","text":"Projede Git ve GitHub kullan\u0131m\u0131 i\u00e7in \u00e7ekti\u011fimiz videoyu izleyebilir ve/veya a\u015fa\u011f\u0131daki yaz\u0131l\u0131 k\u0131lavuzu takip edebilirsin. Git ve Github Kullan\u0131m\u0131 Videosu","title":"Git Kullan\u0131m\u0131"},{"location":"git-kullanimi/#git_kurulumu","text":"Bilgisayar\u0131n\u0131zda Git kurulu de\u011filse git-scm.com/downloads adresinden i\u015fletim sisteminize uygun \u015fekilde kurulum ad\u0131mlar\u0131n\u0131 takip ederek kurulumu yapman\u0131z gerekiyor. Windows kullan\u0131c\u0131lar\u0131 terminal gerektiren i\u015fleri PowerShell veya sorun \u00e7\u0131kar\u0131rsa Git Bash (Git kurulumunda y\u00fckleniyor) kullanarak ad\u0131mlar\u0131 ger\u00e7ekle\u015ftirebilir.","title":"Git Kurulumu"},{"location":"git-kullanimi/#ssh_key_olusturma_githuba_ekleme","text":"GitHub'a commit g\u00f6nderirken g\u00fcvenlik i\u00e7in SSH anahtar\u0131n\u0131z olmas\u0131 ve bu anahtar\u0131n GitHub hesab\u0131n\u0131za tan\u0131ml\u0131 olmas\u0131 gerekmektedir. Bu ad\u0131mlar Linux i\u00e7in yaz\u0131lm\u0131\u015ft\u0131r.\\ \\ A\u015fa\u011f\u0131da anlat\u0131lacak ad\u0131mlarda Windows i\u00e7in birka\u00e7 de\u011fi\u015fiklikleri oldu\u011fundan dolay\u0131 Windows komutlar\u0131n\u0131 https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent kaynaktan kontrol ederek ilerlerseniz olas\u0131 hatalar\u0131 engellemi\u015f olursunuz. Ad\u0131m 1: Terminali a\u00e7 Ad\u0131m 2: SSH anahtar\u0131n\u0131z\u0131 olu\u015fturmak i\u00e7in terminalde kodu \u00e7al\u0131\u015ft\u0131r $ ssh-keygen -t ed25519 -C `GitHub Email Adresiniz` > Generating public/private ed25519 key pair. > Enter file in which to save the key (/home/z3k/.ssh/id_ed25519): [Enter'a bas] SSH key kullan\u0131l\u0131rken g\u00fcvenlik i\u00e7in istenecek parolay\u0131 belirle Parola yaz\u0131l\u0131rken g\u00fcvenlik i\u00e7in ekranda g\u00f6z\u00fckmez > Enter passphrase (empty for no passphrase): [Parolay\u0131 Gir] > Enter same passphrase again: [Parolay\u0131 Tekrar Gir] Ad\u0131m 3: Olu\u015fturulan public ve private keylerin nereye kaydedildi\u011fine iyi bak\u0131n. Ad\u0131m 2'de hi\u00e7bir \u015fey yazmadan Enter'a bast\u0131ysan\u0131z varsay\u0131lan adrese (Linux i\u00e7in /home/username/.ssh/ , Windows i\u00e7in /c/Users/username/.ssh/ ) kaydedilir. > Your identification has been saved in /home/z3k/.ssh/id_ed25519 > Your public key has been saved in /home/z3k/.ssh/id_ed25519.pub Ad\u0131m 4: ssh-agent'\u0131 komut ile \u00e7al\u0131\u015ft\u0131r $ eval \"$(ssh-agent -s)\" Ad\u0131m 5: SSH anahtar\u0131n\u0131z\u0131 bilgisayara tan\u0131t\u0131n. Ad\u0131m 2'de dosya ad\u0131n\u0131 ve/veya yolunu de\u011fi\u015ftirdiyseniz komutta da ilgili yeri de\u011fi\u015ftirmeniz gerekir $ ssh-add ~/.ssh/id_ed25519 Ad\u0131m 2'de verdi\u011fin parolay\u0131 gir > Enter passphrase for /home/z3k/.ssh/id_ed25519: [Parolay\u0131 Gir] > Identity added: /home/z3k/.ssh/id_ed25519 (zekeriya@zekeriyaay.com) Ad\u0131m 6: SSH anahtar\u0131m\u0131z\u0131 GitHub hesab\u0131m\u0131za ba\u011flamak i\u00e7in https://github.com/settings/keys adresine veya GitHub Settings -> SSH and GPG keys sayfas\u0131na gir Ad\u0131m 7: New SSH key butonuna t\u0131kla Ad\u0131m 8: Title k\u0131sm\u0131na hangi bilgisayarda kulland\u0131\u011f\u0131n\u0131 hat\u0131rlayaca\u011f\u0131n ba\u015fl\u0131k ekle Ad\u0131m 9: Olu\u015fturdu\u011fun SSH anahtar\u0131n\u0131n .pub uzant\u0131l\u0131 olan dosyas\u0131n\u0131 text edit\u00f6r ile a\u00e7 veya terminalden a\u015fa\u011f\u0131daki komut ile i\u00e7eri\u011fini yazd\u0131r Dosya konumu ve/veya ad\u0131n\u0131 de\u011fi\u015ftirdiysen komutta g\u00fcncelle $ cat ~/.ssh/id_ed25519.pub > ssh-ed25519 ************* [zekeriya@zekeriyaay.com] Ad\u0131m 10: Key k\u0131sm\u0131na Ad\u0131m 9'daki anahtar \u00e7\u0131kt\u0131s\u0131n\u0131 yap\u0131\u015ft\u0131r ve Add SSH key butonuna basarak kaydet","title":"SSH Key Olu\u015fturma &amp; GitHub'a Ekleme"},{"location":"git-kullanimi/#repoyu_klonlama","text":"\u00c7al\u0131\u015faca\u011f\u0131n repoyu bilgisayar\u0131na klonla $ git clone git@github.com:ProjectSOTAS/<REPO_ADI>.git SSH anahtar\u0131m\u0131z i\u00e7in parola isterse parolay\u0131 gir $ cd <REPO_ADI>","title":"Repoyu Klonlama"},{"location":"git-kullanimi/#yeni_branch_acma","text":"$ git switch -c <BRANCH_ADI> Mevcut branch'i kontrol edin $ git branch","title":"Yeni Branch A\u00e7ma"},{"location":"git-kullanimi/#degisiklikleri_yaynlama","text":"Dosyalardaki de\u011fi\u015fiklikleri kontrol etmek i\u00e7in $ git status Commit at\u0131lacak de\u011fi\u015fiklikleri se\u00e7in $ git add <DE\u011e\u0130\u015e\u0130KL\u0130K_DOSYA_ADI> Se\u00e7ilen de\u011fi\u015fikliklere commit ekle $ git commit -m \"COMMIT MESAJI\" E\u011fer ilk defa commit ekliyorsan\u0131z config ayarlar\u0131 olmad\u0131\u011f\u0131 i\u00e7in hata verecek $ git config --global user.email <GITHUB_MAIL_ADRESIN> $ git config --global user.name <GITHUB_ADIN> Eklenen commitleri yay\u0131nlay\u0131n $ git push E\u011fer kulland\u0131\u011f\u0131n\u0131z branch'i daha \u00f6nceden yay\u0131nlamad\u0131ysan\u0131z hata verecek $ git push --set-upstream origin <BRANCH_ADI>","title":"De\u011fi\u015fiklikleri Yay\u0131nlama"},{"location":"git-kullanimi/#pul_request_acma","text":"Ad\u0131m 1: Taray\u0131c\u0131da repoyu a\u00e7t\u0131\u011f\u0131n\u0131zda Compare & pull request butonuna t\u0131klayarak yay\u0131nlad\u0131\u011f\u0131n\u0131z branch i\u00e7in pr a\u00e7\u0131n Ad\u0131m 2: PR i\u00e7in issue ile ilgili ba\u015fl\u0131k ekle Ad\u0131m 3: A\u00e7\u0131klama k\u0131sm\u0131na #<ISSUE_NO> ve gerekli a\u00e7\u0131klamalar\u0131 yaz Ad\u0131m 4: Reviewers k\u0131sm\u0131na PR'\u0131 onaylayacak ekip liderini ekle Ad\u0131m 5: Projects k\u0131sm\u0131na issue'nun bulundu\u011fu projeyi se\u00e7 Ad\u0131m 6: Her\u015fey haz\u0131r ise Create pull request butonuna bas Ad\u0131m 7: Eklenen de\u011fi\u015fikliklerin hangi issue i\u00e7in oldu\u011funu Linked issues k\u0131sm\u0131nda se\u00e7 Ad\u0131m 8: Geriye sadece ekip liderinin, a\u00e7t\u0131\u011f\u0131n PR'\u0131 inceleyip merge etmesi kal\u0131yor. Senin ba\u015fka i\u015fin kalmad\u0131. Te\u015fekk\u00fcrler...","title":"Pul Request A\u00e7ma"},{"location":"grup-notlandirma/","text":"Grup \u0130\u00e7i Notland\u0131rma Y\u00f6ntemi SOTAS projesinin her \u00fcyesine katsay\u0131 atanacakt\u0131r ve bu katsay\u0131n\u0131n de\u011feri ba\u015flang\u0131\u00e7ta 1 olacakt\u0131r. Bu katsay\u0131n\u0131n de\u011feri bir g\u00f6revin zorlu\u011funa ve teslim tarihine g\u00f6re de\u011fi\u015fecektir. Bir g\u00f6reve \u00fcstlenen bir \u00fcye bu g\u00f6revi zaman\u0131nda teslim etmi\u015fse \u00fcyenin katsay\u0131s\u0131 artacakt\u0131r. Bu g\u00f6rev zaman\u0131nda teslim edilmemi\u015f ise de \u00fcyenin katsay\u0131s\u0131 azalacakt\u0131r. \u00d6rne\u011fin bir g\u00f6revin katsay\u0131 de\u011feri 0.02'dir. Bu g\u00f6reve \u00fcstlenen bir \u00fcyenin de katsay\u0131s\u0131 1.18'dir. \u00dcye, bu g\u00f6revi zaman\u0131nda teslim etmi\u015f ise 1.18 + 0.02 = 1.20 yeni katsay\u0131s\u0131d\u0131r. Proje sonunda da SOTAS projesine verilen not ile her \u00fcyenin katsay\u0131s\u0131 birbiriyle \u00e7arp\u0131larak \u00fcyelerin yeni notlar\u0131 hesaplanacakt\u0131r. \u00d6rne\u011fin bir \u00fcyenin proje sonu katsay\u0131s\u0131 1.2 ve SOTAS projesine verilen not 70 olsun. 70 * 1.2 = 84 bu \u00fcyenin son notudur.","title":"Grup \u0130\u00e7i Notland\u0131rma Y\u00f6ntemi"},{"location":"grup-notlandirma/#grup_ici_notlandrma_yontemi","text":"SOTAS projesinin her \u00fcyesine katsay\u0131 atanacakt\u0131r ve bu katsay\u0131n\u0131n de\u011feri ba\u015flang\u0131\u00e7ta 1 olacakt\u0131r. Bu katsay\u0131n\u0131n de\u011feri bir g\u00f6revin zorlu\u011funa ve teslim tarihine g\u00f6re de\u011fi\u015fecektir. Bir g\u00f6reve \u00fcstlenen bir \u00fcye bu g\u00f6revi zaman\u0131nda teslim etmi\u015fse \u00fcyenin katsay\u0131s\u0131 artacakt\u0131r. Bu g\u00f6rev zaman\u0131nda teslim edilmemi\u015f ise de \u00fcyenin katsay\u0131s\u0131 azalacakt\u0131r. \u00d6rne\u011fin bir g\u00f6revin katsay\u0131 de\u011feri 0.02'dir. Bu g\u00f6reve \u00fcstlenen bir \u00fcyenin de katsay\u0131s\u0131 1.18'dir. \u00dcye, bu g\u00f6revi zaman\u0131nda teslim etmi\u015f ise 1.18 + 0.02 = 1.20 yeni katsay\u0131s\u0131d\u0131r. Proje sonunda da SOTAS projesine verilen not ile her \u00fcyenin katsay\u0131s\u0131 birbiriyle \u00e7arp\u0131larak \u00fcyelerin yeni notlar\u0131 hesaplanacakt\u0131r. \u00d6rne\u011fin bir \u00fcyenin proje sonu katsay\u0131s\u0131 1.2 ve SOTAS projesine verilen not 70 olsun. 70 * 1.2 = 84 bu \u00fcyenin son notudur.","title":"Grup \u0130\u00e7i Notland\u0131rma Y\u00f6ntemi"},{"location":"otomasyon-yapilari/","text":"Otomasyon \u0130\u00e7in Kullan\u0131lan Yap\u0131lar GitHub Kanban board ve milestonelar Issue ad\u0131n\u0131 verdi\u011fimiz gerek yeni \u00f6zellik ekleyebildi\u011fimiz gerekirse de mevcut olan \u00f6zellikler \u00fczerinde de\u011fi\u015fiklik yapabildi\u011fimiz ve buradan proje kanban tablosuna y\u00f6nlendirebildi\u011fimiz yap\u0131lar Actions ad\u0131nda bizim \u00f6zel bir \u015fekilde yazabildi\u011fimiz veya mevcut olan ve \u00f6nceden yaz\u0131lm\u0131\u015f \u015femalar\u0131 kullanabildi\u011fimiz pipeline Discord ile entegre olup canl\u0131 bildirimler Pull Requestler ile code review ve yorum yapma olana\u011f\u0131 CircleCI GitHub Actionlar'\u0131n yetersiz kald\u0131\u011f\u0131 noktada ge\u00e7i\u015f yapmay\u0131 planl\u0131yoruz Ayl\u0131k 6000 saate kadar build s\u00fcresi sunuyor CodeFactor Kod kalitesini \u00f6l\u00e7ebiliyor Issue'lar i\u00e7in \u00f6neri sunuyor Otomatik Testler Angular ve Quarkus i\u00e7erisinde bulunan test yap\u0131lar\u0131 Netlify Frontend uygulamalar\u0131m\u0131z\u0131 GitHub ile entegre \u015fekilde deploy etmek i\u00e7in","title":"Otomasyon \u0130\u00e7in Kullan\u0131lan Yap\u0131lar"},{"location":"otomasyon-yapilari/#otomasyon_icin_kullanlan_yaplar","text":"","title":"Otomasyon \u0130\u00e7in Kullan\u0131lan Yap\u0131lar"},{"location":"otomasyon-yapilari/#github","text":"Kanban board ve milestonelar Issue ad\u0131n\u0131 verdi\u011fimiz gerek yeni \u00f6zellik ekleyebildi\u011fimiz gerekirse de mevcut olan \u00f6zellikler \u00fczerinde de\u011fi\u015fiklik yapabildi\u011fimiz ve buradan proje kanban tablosuna y\u00f6nlendirebildi\u011fimiz yap\u0131lar Actions ad\u0131nda bizim \u00f6zel bir \u015fekilde yazabildi\u011fimiz veya mevcut olan ve \u00f6nceden yaz\u0131lm\u0131\u015f \u015femalar\u0131 kullanabildi\u011fimiz pipeline Discord ile entegre olup canl\u0131 bildirimler Pull Requestler ile code review ve yorum yapma olana\u011f\u0131","title":"GitHub"},{"location":"otomasyon-yapilari/#circleci","text":"GitHub Actionlar'\u0131n yetersiz kald\u0131\u011f\u0131 noktada ge\u00e7i\u015f yapmay\u0131 planl\u0131yoruz Ayl\u0131k 6000 saate kadar build s\u00fcresi sunuyor","title":"CircleCI"},{"location":"otomasyon-yapilari/#codefactor","text":"Kod kalitesini \u00f6l\u00e7ebiliyor Issue'lar i\u00e7in \u00f6neri sunuyor","title":"CodeFactor"},{"location":"otomasyon-yapilari/#otomatik_testler","text":"Angular ve Quarkus i\u00e7erisinde bulunan test yap\u0131lar\u0131","title":"Otomatik Testler"},{"location":"otomasyon-yapilari/#netlify","text":"Frontend uygulamalar\u0131m\u0131z\u0131 GitHub ile entegre \u015fekilde deploy etmek i\u00e7in","title":"Netlify"},{"location":"teknoloji-dokumentasyonu/","text":"Teknoloji Dok\u00fcmentasyonu Bu dok\u00fcmantasyon kullan\u0131lan teknolojileri ve neden kullan\u0131ld\u0131klar\u0131n\u0131 a\u00e7\u0131klar. Front-end Angular Google taraf\u0131ndan ortaya \u00e7\u0131kar\u0131lan ve g\u00fcn\u00fcm\u00fczde hala geli\u015fmekte olan Angular\u2019\u0131n kullan\u0131lmas\u0131n\u0131n en b\u00fcy\u00fck nedenlerinden biri di\u011fer frameworklerden daha esnek kullan\u0131\u015fa sahip olmas\u0131 ve mod\u00fcler kullan\u0131m tekni\u011fidir. Bunlar\u0131n yan\u0131nda i\u00e7inde bulunan paketlerin haz\u0131r olarak gelmesi ve hemen kullan\u0131labilir olmas\u0131 en b\u00fcy\u00fck avantajlar\u0131ndand\u0131r. Performans ve h\u0131z bak\u0131m\u0131ndan olduk\u00e7a tatmin edicidir. Bir uygulaman\u0131n ayn\u0131 anda \u00e7apraz platformlara h\u0131zl\u0131ca \u00e7\u0131kmas\u0131 isteniyorsa angular bu konuda en b\u00fcy\u00fck yard\u0131mc\u0131d\u0131r. Angular, React ve di\u011fer modern \u00e7er\u00e7eveler gibi, HTML'i sunucuda veya hatta bir web \u00e7al\u0131\u015fan\u0131nda i\u015fleyerek performans kazan\u0131mlar\u0131ndan yararlanabilir. Uygulama/site tasar\u0131m\u0131na ba\u011fl\u0131 olarak bu e\u015f bi\u00e7imli i\u015fleme, kullan\u0131c\u0131n\u0131n deneyimini daha da anl\u0131k hissettirebilir. Angular i\u00e7in koyabilirsiniz daha yazmad\u0131ysan\u0131z Angular Material Angular'\u0131n resmi olarak geli\u015ftirdi\u011fi bir k\u00fct\u00fcphanedir. Google'\u0131n Material Design tasar\u0131m\u0131n\u0131 Angular componentleri olarak kar\u015f\u0131m\u0131za \u00e7\u0131kar\u0131r. Ortak bir tasar\u0131m sistemine sahip olabilmek i\u00e7in tercih ettik. SCSS Kendimiz component geli\u015ftirdi\u011fimiz zaman CSS'in biraz daha g\u00fczeli olan SCSS'i kullan\u0131caz. SCSS i\u00e7inde fonksiyonlar olu\u015fturabilir daha geli\u015fmi\u015f de\u011fi\u015fken sistemleri kullanabiliyoruz. Netlify Netlify ile Javascript ile geli\u015ftirmi\u015f oldu\u011fumuz frontend projelerimizi \u00fccretsiz olarak bar\u0131nd\u0131rabiliyoruz. GitHub ile olan entegrasyonu sayesinde master branch g\u00fcncellendi\u011finde otomatik olarak Netlify \u00fczerindeki demo projemizde g\u00fcncellenebilecek. Back-end Quarkus Quarkus, OpenJDK ve GraalVM i\u00e7in sekt\u00f6rdeki \u00f6nemli library\u2019leri i\u00e7inde bar\u0131nd\u0131rarak haz\u0131rlanm\u0131\u015f bir Kubernetes Java Stack. Neden Quarkus Kullanmal\u0131? Memory consumption de\u011ferleri daha az, d\u00fc\u015f\u00fcn\u00fcn ki daha az memory ile ayn\u0131 i\u015fi yapmak, \u00e7ok iyi bir tercih sebebi olabilir. Cloud taraf\u0131nda Serverless mimarisinin ortaya \u00e7\u0131kmas\u0131n\u0131n en \u00f6nemli nedenlerinden biri Cost Reduction yapmakt\u0131. Gerekti\u011finde kaynaklar ayakta olmal\u0131, kapal\u0131 oldu\u011funda ise; ihtiya\u00e7 duyuldu\u011funda \u00e7ok h\u0131zl\u0131 bir \u015fekilde cevap vermesiydi. Java taraf\u0131nda kalmak isteyen organizasyonlar i\u00e7in boot time ne kadar de\u011ferli oldu\u011funu tahmin edebiliyorsunuzdur i\u015fte bu y\u00fczden Quarkus bi\u00e7ilmi\u015f kaftan olabilir. Maven Maven genellikle Java platformunda yer alan komutlar\u0131n derlenmesi s\u0131ras\u0131nda kullan\u0131lan otomasyon ve in\u015fa arac\u0131d\u0131r. Maven proje dosyas\u0131na eklenen ba\u011f\u0131ml\u0131l\u0131klar/k\u00fct\u00fcphaneler ile kolay bir \u015fekilde indirmeyi ve proje yerle\u015ftirmeyi sa\u011flar. GraalVM GraalVM Oracle taraf\u0131ndan geli\u015ftirilen bir sanal makine. Java, JVM tabanl\u0131 di\u011fer diller, Javascript, Ruby, Python, R, C/C++ ve di\u011fer Low Level Virtual Machine(LLVM) deste\u011fi sa\u011flayan dilleri farkl\u0131 deployment senaryolar\u0131nda \u00e7al\u0131\u015ft\u0131rabiliyor. LLVM sayesinde adapt\u00f6r\u00fcn\u00fc yazd\u0131\u011f\u0131n\u0131 herhangi bir dili de GraalVM\u2019de \u00e7al\u0131\u015ft\u0131rmak m\u00fcmk\u00fcn. Native image yazabiliyor. Kubernetes Kubernetes Google taraf\u0131ndan GO dilinde geli\u015ftirilmi\u015f Cloud Native Computing Foundation taraf\u0131ndan desteklenen mevcut konteyner haline getirilmi\u015f uygulamalar\u0131n\u0131z\u0131 otomatik deploy etmek, say\u0131lar\u0131n\u0131 artt\u0131r\u0131p azaltmak gibi i\u015flemler ile birlikte y\u00f6netmenizi sa\u011flayan bir Konteyner k\u00fcmeleme (container cluster) arac\u0131d\u0131r. Bu teknolojiyi kullanarak uygulamalar\u0131m\u0131z\u0131 mikroservis mimarisi arac\u0131l\u0131\u011f\u0131yla daha kolay y\u00f6netebilir , daha kolay sorunlar\u0131m\u0131za \u00e7\u00f6z\u00fcm bulabilir ve daha da \u00f6nemlisi ta\u015f\u0131nabilir bir ortam sa\u011flad\u0131\u011f\u0131 i\u00e7in uygulamalar\u0131m\u0131z\u0131 \u00e7ok kolay bir \u015fekilde ta\u015f\u0131yabiliriz. S\u00fcr\u00fcm ge\u00e7i\u015flerini de bu sayede kolay bir \u015fekilde yapabiliriz. Cassandra DB Cassandra, Java ile geli\u015ftirilmi\u015f, a\u00e7\u0131k kaynak(open source), nosql veritaban\u0131 tipidir. Okulda \u00f6\u011frendi\u011fimiz Mysql bir ili\u015fkisel veri taban\u0131 mesela. \u0130li\u015fkisel veritaban\u0131 al\u0131\u015f\u0131lagelmi\u015f ad\u0131yla RDBMS (Relational Database Managament Systems)\u2019de sorgulama i\u00e7in SQL dili kullan\u0131l\u0131rken, Nosql\u2019de sorgular yer alm\u0131yor. Verilerimiz tablolarda tutulmuyor, onun yerine JSON ya da XML format\u0131nda column base yap\u0131s\u0131n\u0131 kullanarak kaydediliyor. Column base derken Cassandra bir ka\u00e7 farkl\u0131 sunucuda \u00fczerinde da\u011f\u0131t\u0131k \u015fekilde \u00e7al\u0131\u015fabildi\u011fi i\u00e7in verileri yatay olarak \u00f6l\u00e7ekleyebiliyoruz. Hexagonal Architecture Hexagonal Mimari, ortak katmanl\u0131 mimari tasar\u0131mlar\u0131nda g\u00f6rd\u00fc\u011f\u00fcm\u00fcz bir sistemin \u00e7ekirde\u011fini olu\u015fturan temel i\u015f mant\u0131klar\u0131n\u0131n bulundu\u011fu mod\u00fcler par\u00e7alar\u0131n di\u011fer katmanlarla i\u00e7 i\u00e7e olacak \u015fekilde tasarland\u0131\u011f\u0131 bu y\u00fczden sisteminizi d\u0131\u015far\u0131ya a\u00e7an katmanlar\u0131n ve temel i\u015f mant\u0131klar\u0131n\u0131 y\u00f6neten servis katmanlar\u0131n\u0131n birbirine ba\u011f\u0131ml\u0131 \u015fekilde davranmas\u0131na yol a\u00e7an mimarilerin aksine, katmanlar aras\u0131ndaki ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 \u201cdomain\u201d dedi\u011fimiz tamamen i\u015f mant\u0131klar\u0131n\u0131n oldu\u011fu en i\u00e7te bulunan katmana do\u011fru ba\u011f\u0131ml\u0131 olacak \u015fekilde tasarlad\u0131\u011f\u0131m\u0131z Domain-Driver Design mimarisinin \u00f6zelle\u015fmi\u015f bir versiyonudur Temel Bile\u015fenleri 1. Domain Domain i\u00e7in sadece i\u015f kurallar\u0131ndan olu\u015fan, bu kurallar\u0131n entity\u2019ler vas\u0131tas\u0131yla tan\u0131mland\u0131\u011f\u0131 ve i\u015flendi\u011fi, uygulaman\u0131n hi\u00e7bir katman\u0131 ile ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 olmayan asl\u0131nda uygulaman\u0131n temel i\u015flevinin ne oldu\u011funu anlamam\u0131z\u0131 kolayla\u015ft\u0131ran saf kod bloklar\u0131 diyebiliriz. 2. Use-Case \u0130\u015f kurallar\u0131n\u0131 etkileyen, uygulamay\u0131 \u00e7a\u011f\u0131ran birincil portlar\u0131n kulland\u0131\u011f\u0131 senaryolar\u0131 i\u00e7eren ve ortak katmanl\u0131 mimaride g\u00f6rd\u00fc\u011f\u00fcm\u00fcz servis k\u0131sm\u0131nda bulunan senaryolar\u0131n tek tek ayr\u0131\u015ft\u0131r\u0131lm\u0131\u015f hali diyebiliriz. Bir use-case, domainde oldu\u011fu gibi uygulaman\u0131n core katman\u0131nda bulunur ve d\u0131\u015fardaki katmanlarla ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 bulunmaz. 3. Input & Output Ports Uygulaman\u0131n d\u0131\u015far\u0131 ile ileti\u015fimi input ve output portlar\u0131 \u00fczerinden ger\u00e7ekle\u015fir. Bir input port, uygulamadaki use-case taraf\u0131ndan implement edilen basit bir aray\u00fcz\u00fc ifade eder. D\u0131\u015f katmanda bulunan bir input adapt\u00f6r taraf\u0131ndan \u00e7a\u011fr\u0131larak uygulaman\u0131n d\u0131\u015far\u0131 ile ileti\u015fimene olanak sa\u011flar. Bir output portu, uygulaman\u0131n d\u0131\u015far\u0131dan bir \u015feye ihtiya\u00e7 duymas\u0131 halinde use-case taraf\u0131ndan \u00e7a\u011fr\u0131labilen basit bir aray\u00fczd\u00fcr. \u00d6rne\u011fin, veritaban\u0131 eri\u015fimini yapan ve use-case\u2019in ihtiyac\u0131 olan veriyi elde etmemizi sa\u011flayan basit bir aray\u00fcz\u00fc d\u00fc\u015f\u00fcnebiliriz. Output port d\u0131\u015f katmanda bulunan bir output adapt\u00f6r taraf\u0131ndan implement edilir. B\u00f6ylece use-case \u2019in d\u0131\u015f ortama ba\u011fl\u0131l\u0131\u011f\u0131 ortadan kalkm\u0131\u015f olur. Ayr\u0131ca input ve output portlar\u0131 sayesinde bir sisteme verinin nerden geldi\u011fini ve sistem taraf\u0131ndan olu\u015fturulan verilerin nas\u0131l d\u0131\u015far\u0131ya aktar\u0131ld\u0131\u011f\u0131n\u0131 rahatl\u0131kla tespit edebiliriz. 4. Input & Output Adapters Hexagonal mimaride adapt\u00f6rler en d\u0131\u015ftaki katmanlar\u0131 olu\u015fturur. Uygulaman\u0131n \u00e7ekirde\u011finin bir par\u00e7as\u0131 de\u011fillerdir fakat input ve output portlar\u0131 \u00fczerinden dolayl\u0131 olarak uygulama ile ileti\u015fime ge\u00e7erler. Input adapt\u00f6rlere bir web aray\u00fcz\u00fc ya da bir job \u00f6rnek verilebilir. Bu adapt\u00f6rler input portlar\u0131n\u0131 \u00e7a\u011f\u0131rarak uygulaman\u0131z \u00fczerinde bir istek olu\u015ftururlar. Output adapt\u00f6rler ise output portlar\u0131n\u0131 implement eder ve bir use-case \u00fczerinden \u00e7a\u011fr\u0131l\u0131rlar. Bir veritaban\u0131na ba\u011flan\u0131p veriyi kaydetme ya da veriyi okuma i\u015flemi \u00f6rnek g\u00f6sterilebilir. Hexagonal mimari, bir uygulaman\u0131n kolay geli\u015ftirilebilmesine ve kolay deploy edilebilmesine, bak\u0131m maliyeti az olan sistemlerin tasarlanmas\u0131na, e\u011fer ekip olarak bir \u00fcr\u00fcn \u00fczerinde \u00e7al\u0131\u015f\u0131yorsan\u0131z ayn\u0131 perspektif ile \u00fcr\u00fcne yakla\u015fman\u0131za olanak sa\u011flayan bir mimari modeldir.","title":"Teknoloji Dok\u00fcmentasyonu"},{"location":"teknoloji-dokumentasyonu/#teknoloji_dokumentasyonu","text":"Bu dok\u00fcmantasyon kullan\u0131lan teknolojileri ve neden kullan\u0131ld\u0131klar\u0131n\u0131 a\u00e7\u0131klar.","title":"Teknoloji Dok\u00fcmentasyonu"},{"location":"teknoloji-dokumentasyonu/#front-end","text":"","title":"Front-end"},{"location":"teknoloji-dokumentasyonu/#angular","text":"Google taraf\u0131ndan ortaya \u00e7\u0131kar\u0131lan ve g\u00fcn\u00fcm\u00fczde hala geli\u015fmekte olan Angular\u2019\u0131n kullan\u0131lmas\u0131n\u0131n en b\u00fcy\u00fck nedenlerinden biri di\u011fer frameworklerden daha esnek kullan\u0131\u015fa sahip olmas\u0131 ve mod\u00fcler kullan\u0131m tekni\u011fidir. Bunlar\u0131n yan\u0131nda i\u00e7inde bulunan paketlerin haz\u0131r olarak gelmesi ve hemen kullan\u0131labilir olmas\u0131 en b\u00fcy\u00fck avantajlar\u0131ndand\u0131r. Performans ve h\u0131z bak\u0131m\u0131ndan olduk\u00e7a tatmin edicidir. Bir uygulaman\u0131n ayn\u0131 anda \u00e7apraz platformlara h\u0131zl\u0131ca \u00e7\u0131kmas\u0131 isteniyorsa angular bu konuda en b\u00fcy\u00fck yard\u0131mc\u0131d\u0131r. Angular, React ve di\u011fer modern \u00e7er\u00e7eveler gibi, HTML'i sunucuda veya hatta bir web \u00e7al\u0131\u015fan\u0131nda i\u015fleyerek performans kazan\u0131mlar\u0131ndan yararlanabilir. Uygulama/site tasar\u0131m\u0131na ba\u011fl\u0131 olarak bu e\u015f bi\u00e7imli i\u015fleme, kullan\u0131c\u0131n\u0131n deneyimini daha da anl\u0131k hissettirebilir. Angular i\u00e7in koyabilirsiniz daha yazmad\u0131ysan\u0131z","title":"Angular"},{"location":"teknoloji-dokumentasyonu/#angular_material","text":"Angular'\u0131n resmi olarak geli\u015ftirdi\u011fi bir k\u00fct\u00fcphanedir. Google'\u0131n Material Design tasar\u0131m\u0131n\u0131 Angular componentleri olarak kar\u015f\u0131m\u0131za \u00e7\u0131kar\u0131r. Ortak bir tasar\u0131m sistemine sahip olabilmek i\u00e7in tercih ettik.","title":"Angular Material"},{"location":"teknoloji-dokumentasyonu/#scss","text":"Kendimiz component geli\u015ftirdi\u011fimiz zaman CSS'in biraz daha g\u00fczeli olan SCSS'i kullan\u0131caz. SCSS i\u00e7inde fonksiyonlar olu\u015fturabilir daha geli\u015fmi\u015f de\u011fi\u015fken sistemleri kullanabiliyoruz.","title":"SCSS"},{"location":"teknoloji-dokumentasyonu/#netlify","text":"Netlify ile Javascript ile geli\u015ftirmi\u015f oldu\u011fumuz frontend projelerimizi \u00fccretsiz olarak bar\u0131nd\u0131rabiliyoruz. GitHub ile olan entegrasyonu sayesinde master branch g\u00fcncellendi\u011finde otomatik olarak Netlify \u00fczerindeki demo projemizde g\u00fcncellenebilecek.","title":"Netlify"},{"location":"teknoloji-dokumentasyonu/#back-end","text":"","title":"Back-end"},{"location":"teknoloji-dokumentasyonu/#quarkus","text":"Quarkus, OpenJDK ve GraalVM i\u00e7in sekt\u00f6rdeki \u00f6nemli library\u2019leri i\u00e7inde bar\u0131nd\u0131rarak haz\u0131rlanm\u0131\u015f bir Kubernetes Java Stack.","title":"Quarkus"},{"location":"teknoloji-dokumentasyonu/#neden_quarkus_kullanmal","text":"Memory consumption de\u011ferleri daha az, d\u00fc\u015f\u00fcn\u00fcn ki daha az memory ile ayn\u0131 i\u015fi yapmak, \u00e7ok iyi bir tercih sebebi olabilir. Cloud taraf\u0131nda Serverless mimarisinin ortaya \u00e7\u0131kmas\u0131n\u0131n en \u00f6nemli nedenlerinden biri Cost Reduction yapmakt\u0131. Gerekti\u011finde kaynaklar ayakta olmal\u0131, kapal\u0131 oldu\u011funda ise; ihtiya\u00e7 duyuldu\u011funda \u00e7ok h\u0131zl\u0131 bir \u015fekilde cevap vermesiydi. Java taraf\u0131nda kalmak isteyen organizasyonlar i\u00e7in boot time ne kadar de\u011ferli oldu\u011funu tahmin edebiliyorsunuzdur i\u015fte bu y\u00fczden Quarkus bi\u00e7ilmi\u015f kaftan olabilir.","title":"Neden Quarkus Kullanmal\u0131?"},{"location":"teknoloji-dokumentasyonu/#maven","text":"Maven genellikle Java platformunda yer alan komutlar\u0131n derlenmesi s\u0131ras\u0131nda kullan\u0131lan otomasyon ve in\u015fa arac\u0131d\u0131r. Maven proje dosyas\u0131na eklenen ba\u011f\u0131ml\u0131l\u0131klar/k\u00fct\u00fcphaneler ile kolay bir \u015fekilde indirmeyi ve proje yerle\u015ftirmeyi sa\u011flar.","title":"Maven"},{"location":"teknoloji-dokumentasyonu/#graalvm","text":"GraalVM Oracle taraf\u0131ndan geli\u015ftirilen bir sanal makine. Java, JVM tabanl\u0131 di\u011fer diller, Javascript, Ruby, Python, R, C/C++ ve di\u011fer Low Level Virtual Machine(LLVM) deste\u011fi sa\u011flayan dilleri farkl\u0131 deployment senaryolar\u0131nda \u00e7al\u0131\u015ft\u0131rabiliyor. LLVM sayesinde adapt\u00f6r\u00fcn\u00fc yazd\u0131\u011f\u0131n\u0131 herhangi bir dili de GraalVM\u2019de \u00e7al\u0131\u015ft\u0131rmak m\u00fcmk\u00fcn. Native image yazabiliyor.","title":"GraalVM"},{"location":"teknoloji-dokumentasyonu/#kubernetes","text":"Kubernetes Google taraf\u0131ndan GO dilinde geli\u015ftirilmi\u015f Cloud Native Computing Foundation taraf\u0131ndan desteklenen mevcut konteyner haline getirilmi\u015f uygulamalar\u0131n\u0131z\u0131 otomatik deploy etmek, say\u0131lar\u0131n\u0131 artt\u0131r\u0131p azaltmak gibi i\u015flemler ile birlikte y\u00f6netmenizi sa\u011flayan bir Konteyner k\u00fcmeleme (container cluster) arac\u0131d\u0131r. Bu teknolojiyi kullanarak uygulamalar\u0131m\u0131z\u0131 mikroservis mimarisi arac\u0131l\u0131\u011f\u0131yla daha kolay y\u00f6netebilir , daha kolay sorunlar\u0131m\u0131za \u00e7\u00f6z\u00fcm bulabilir ve daha da \u00f6nemlisi ta\u015f\u0131nabilir bir ortam sa\u011flad\u0131\u011f\u0131 i\u00e7in uygulamalar\u0131m\u0131z\u0131 \u00e7ok kolay bir \u015fekilde ta\u015f\u0131yabiliriz. S\u00fcr\u00fcm ge\u00e7i\u015flerini de bu sayede kolay bir \u015fekilde yapabiliriz.","title":"Kubernetes"},{"location":"teknoloji-dokumentasyonu/#cassandra_db","text":"Cassandra, Java ile geli\u015ftirilmi\u015f, a\u00e7\u0131k kaynak(open source), nosql veritaban\u0131 tipidir. Okulda \u00f6\u011frendi\u011fimiz Mysql bir ili\u015fkisel veri taban\u0131 mesela. \u0130li\u015fkisel veritaban\u0131 al\u0131\u015f\u0131lagelmi\u015f ad\u0131yla RDBMS (Relational Database Managament Systems)\u2019de sorgulama i\u00e7in SQL dili kullan\u0131l\u0131rken, Nosql\u2019de sorgular yer alm\u0131yor. Verilerimiz tablolarda tutulmuyor, onun yerine JSON ya da XML format\u0131nda column base yap\u0131s\u0131n\u0131 kullanarak kaydediliyor. Column base derken Cassandra bir ka\u00e7 farkl\u0131 sunucuda \u00fczerinde da\u011f\u0131t\u0131k \u015fekilde \u00e7al\u0131\u015fabildi\u011fi i\u00e7in verileri yatay olarak \u00f6l\u00e7ekleyebiliyoruz.","title":"Cassandra DB"},{"location":"teknoloji-dokumentasyonu/#hexagonal_architecture","text":"Hexagonal Mimari, ortak katmanl\u0131 mimari tasar\u0131mlar\u0131nda g\u00f6rd\u00fc\u011f\u00fcm\u00fcz bir sistemin \u00e7ekirde\u011fini olu\u015fturan temel i\u015f mant\u0131klar\u0131n\u0131n bulundu\u011fu mod\u00fcler par\u00e7alar\u0131n di\u011fer katmanlarla i\u00e7 i\u00e7e olacak \u015fekilde tasarland\u0131\u011f\u0131 bu y\u00fczden sisteminizi d\u0131\u015far\u0131ya a\u00e7an katmanlar\u0131n ve temel i\u015f mant\u0131klar\u0131n\u0131 y\u00f6neten servis katmanlar\u0131n\u0131n birbirine ba\u011f\u0131ml\u0131 \u015fekilde davranmas\u0131na yol a\u00e7an mimarilerin aksine, katmanlar aras\u0131ndaki ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 \u201cdomain\u201d dedi\u011fimiz tamamen i\u015f mant\u0131klar\u0131n\u0131n oldu\u011fu en i\u00e7te bulunan katmana do\u011fru ba\u011f\u0131ml\u0131 olacak \u015fekilde tasarlad\u0131\u011f\u0131m\u0131z Domain-Driver Design mimarisinin \u00f6zelle\u015fmi\u015f bir versiyonudur","title":"Hexagonal Architecture"},{"location":"teknoloji-dokumentasyonu/#temel_bilesenleri","text":"","title":"Temel Bile\u015fenleri"},{"location":"teknoloji-dokumentasyonu/#1_domain","text":"Domain i\u00e7in sadece i\u015f kurallar\u0131ndan olu\u015fan, bu kurallar\u0131n entity\u2019ler vas\u0131tas\u0131yla tan\u0131mland\u0131\u011f\u0131 ve i\u015flendi\u011fi, uygulaman\u0131n hi\u00e7bir katman\u0131 ile ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 olmayan asl\u0131nda uygulaman\u0131n temel i\u015flevinin ne oldu\u011funu anlamam\u0131z\u0131 kolayla\u015ft\u0131ran saf kod bloklar\u0131 diyebiliriz.","title":"1. Domain"},{"location":"teknoloji-dokumentasyonu/#2_use-case","text":"\u0130\u015f kurallar\u0131n\u0131 etkileyen, uygulamay\u0131 \u00e7a\u011f\u0131ran birincil portlar\u0131n kulland\u0131\u011f\u0131 senaryolar\u0131 i\u00e7eren ve ortak katmanl\u0131 mimaride g\u00f6rd\u00fc\u011f\u00fcm\u00fcz servis k\u0131sm\u0131nda bulunan senaryolar\u0131n tek tek ayr\u0131\u015ft\u0131r\u0131lm\u0131\u015f hali diyebiliriz. Bir use-case, domainde oldu\u011fu gibi uygulaman\u0131n core katman\u0131nda bulunur ve d\u0131\u015fardaki katmanlarla ba\u011f\u0131ml\u0131l\u0131\u011f\u0131 bulunmaz.","title":"2. Use-Case"},{"location":"teknoloji-dokumentasyonu/#3_input_output_ports","text":"Uygulaman\u0131n d\u0131\u015far\u0131 ile ileti\u015fimi input ve output portlar\u0131 \u00fczerinden ger\u00e7ekle\u015fir. Bir input port, uygulamadaki use-case taraf\u0131ndan implement edilen basit bir aray\u00fcz\u00fc ifade eder. D\u0131\u015f katmanda bulunan bir input adapt\u00f6r taraf\u0131ndan \u00e7a\u011fr\u0131larak uygulaman\u0131n d\u0131\u015far\u0131 ile ileti\u015fimene olanak sa\u011flar. Bir output portu, uygulaman\u0131n d\u0131\u015far\u0131dan bir \u015feye ihtiya\u00e7 duymas\u0131 halinde use-case taraf\u0131ndan \u00e7a\u011fr\u0131labilen basit bir aray\u00fczd\u00fcr. \u00d6rne\u011fin, veritaban\u0131 eri\u015fimini yapan ve use-case\u2019in ihtiyac\u0131 olan veriyi elde etmemizi sa\u011flayan basit bir aray\u00fcz\u00fc d\u00fc\u015f\u00fcnebiliriz. Output port d\u0131\u015f katmanda bulunan bir output adapt\u00f6r taraf\u0131ndan implement edilir. B\u00f6ylece use-case \u2019in d\u0131\u015f ortama ba\u011fl\u0131l\u0131\u011f\u0131 ortadan kalkm\u0131\u015f olur. Ayr\u0131ca input ve output portlar\u0131 sayesinde bir sisteme verinin nerden geldi\u011fini ve sistem taraf\u0131ndan olu\u015fturulan verilerin nas\u0131l d\u0131\u015far\u0131ya aktar\u0131ld\u0131\u011f\u0131n\u0131 rahatl\u0131kla tespit edebiliriz.","title":"3. Input &amp; Output Ports"},{"location":"teknoloji-dokumentasyonu/#4_input_output_adapters","text":"Hexagonal mimaride adapt\u00f6rler en d\u0131\u015ftaki katmanlar\u0131 olu\u015fturur. Uygulaman\u0131n \u00e7ekirde\u011finin bir par\u00e7as\u0131 de\u011fillerdir fakat input ve output portlar\u0131 \u00fczerinden dolayl\u0131 olarak uygulama ile ileti\u015fime ge\u00e7erler. Input adapt\u00f6rlere bir web aray\u00fcz\u00fc ya da bir job \u00f6rnek verilebilir. Bu adapt\u00f6rler input portlar\u0131n\u0131 \u00e7a\u011f\u0131rarak uygulaman\u0131z \u00fczerinde bir istek olu\u015ftururlar. Output adapt\u00f6rler ise output portlar\u0131n\u0131 implement eder ve bir use-case \u00fczerinden \u00e7a\u011fr\u0131l\u0131rlar. Bir veritaban\u0131na ba\u011flan\u0131p veriyi kaydetme ya da veriyi okuma i\u015flemi \u00f6rnek g\u00f6sterilebilir. Hexagonal mimari, bir uygulaman\u0131n kolay geli\u015ftirilebilmesine ve kolay deploy edilebilmesine, bak\u0131m maliyeti az olan sistemlerin tasarlanmas\u0131na, e\u011fer ekip olarak bir \u00fcr\u00fcn \u00fczerinde \u00e7al\u0131\u015f\u0131yorsan\u0131z ayn\u0131 perspektif ile \u00fcr\u00fcne yakla\u015fman\u0131za olanak sa\u011flayan bir mimari modeldir.","title":"4. Input &amp; Output Adapters"},{"location":"test-stratejisi/","text":"SOTAS Test Stratejisi Dok\u00fcmantasyonu Kapsam SOTAS projesinde t\u00fcm ekip \u00fcyeleri geli\u015ftirme, d\u00fczenleme veya ekleme yaparken test yazmakla sorumludur. \u00d6nceden kararla\u015f\u0131t\u0131r\u0131lm\u0131\u015f veya beklenmedik durumlar d\u0131\u015f\u0131nda yap\u0131lan t\u00fcm pull requestlerin code reviewlar\u0131 \u00fcyelerin ekip liderlerince yap\u0131lmal\u0131d\u0131r. \u00d6r: Ekip 1 i\u00e7erisindeki t\u00fcm \u00fcyeler ekip Ekip 1 liderine code review yapt\u0131rmal\u0131d\u0131r. Ekip 1'in \u00fcst\u00fcndeki ekibe ise Ekip 1'in lideri pull request a\u00e7\u0131p \u00fcst ekip liderine kodlar\u0131 onaylatmal\u0131d\u0131r. Gerek frontend gerekse de backend geli\u015ftirmeleri yap\u0131l\u0131rken ilk olarak yap\u0131lan geli\u015ftirme i\u00e7in test yaz\u0131lmal\u0131d\u0131r. Test yaz\u0131lmadan kabul edilen code reviewlardan ekip liderleri sorumlu olacakt\u0131r. Yakla\u015f\u0131m Yap\u0131lan her geli\u015ftirme i\u00e7in problemi kapsayacak kadar unit test yaz\u0131lmal\u0131d\u0131r. \u00c7e\u015fitli servislerin, 3. parti API'lar\u0131n ve sistemin entegrasyonunu kontrol edebilmek i\u00e7in belli aral\u0131klarla smoke testler, performance testleri ve integration testleri yaz\u0131labilir. Ortam Her bir veritaban\u0131 modeli i\u00e7in seeder yaz\u0131lmal\u0131 ve hangi ortamda test yap\u0131l\u0131rsa yap\u0131ls\u0131n bu seederlar ile veri \u00fcretilmelidir. Mikroservislerin teker teker testi i\u00e7in Docker y\u00fckl\u00fc ve \u00e7al\u0131\u015f\u0131yor olan herhangi bir cihaz \u00fczerinde testler yap\u0131labilir. Pull Request yap\u0131ld\u0131\u011f\u0131nda \u00f6nceden belirlenmi\u015f olan pipeline \u00fczerinden automated testler \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Linux tabanl\u0131 cihazlar tercih edilmelidir. Kritik dosyalar ve veritabanlar\u0131 herhangi bir testten \u00f6nce mutlaka yedeklenmelidir ki herhangi bir veri kayb\u0131 ya\u015fanmas\u0131n. Ara\u00e7lar Test yazarken kullan\u0131lan framework\u00fcn sunmu\u015f oldu\u011fu test yap\u0131s\u0131 kullan\u0131lmal\u0131d\u0131r. \u00d6zellikle unit testlerin proje ile tam entegre olmas\u0131 beklenir. Load testing ve proje b\u00fct\u00fcn\u00fcn\u00fcn testlerinde arac\u0131 programlar kullan\u0131labilir ve kullan\u0131lmal\u0131d\u0131r. Yay\u0131nlama Herhangi bir test i\u00e7ermeyen veya hata veren testleri bulunan pull requestler kesinlikle kabul kabul edilemez. \u00c7\u00f6zmek istenen probleme uygun test mutlaka ve mutlaka yaz\u0131lmal\u0131d\u0131r. Testleri ba\u015far\u0131yla ge\u00e7en pull requestler ekip liderlerince projeye merge edilebilir.","title":"SOTAS Test Stratejisi Dok\u00fcmantasyonu"},{"location":"test-stratejisi/#sotas_test_stratejisi_dokumantasyonu","text":"","title":"SOTAS Test Stratejisi Dok\u00fcmantasyonu"},{"location":"test-stratejisi/#kapsam","text":"SOTAS projesinde t\u00fcm ekip \u00fcyeleri geli\u015ftirme, d\u00fczenleme veya ekleme yaparken test yazmakla sorumludur. \u00d6nceden kararla\u015f\u0131t\u0131r\u0131lm\u0131\u015f veya beklenmedik durumlar d\u0131\u015f\u0131nda yap\u0131lan t\u00fcm pull requestlerin code reviewlar\u0131 \u00fcyelerin ekip liderlerince yap\u0131lmal\u0131d\u0131r. \u00d6r: Ekip 1 i\u00e7erisindeki t\u00fcm \u00fcyeler ekip Ekip 1 liderine code review yapt\u0131rmal\u0131d\u0131r. Ekip 1'in \u00fcst\u00fcndeki ekibe ise Ekip 1'in lideri pull request a\u00e7\u0131p \u00fcst ekip liderine kodlar\u0131 onaylatmal\u0131d\u0131r. Gerek frontend gerekse de backend geli\u015ftirmeleri yap\u0131l\u0131rken ilk olarak yap\u0131lan geli\u015ftirme i\u00e7in test yaz\u0131lmal\u0131d\u0131r. Test yaz\u0131lmadan kabul edilen code reviewlardan ekip liderleri sorumlu olacakt\u0131r.","title":"Kapsam"},{"location":"test-stratejisi/#yaklasm","text":"Yap\u0131lan her geli\u015ftirme i\u00e7in problemi kapsayacak kadar unit test yaz\u0131lmal\u0131d\u0131r. \u00c7e\u015fitli servislerin, 3. parti API'lar\u0131n ve sistemin entegrasyonunu kontrol edebilmek i\u00e7in belli aral\u0131klarla smoke testler, performance testleri ve integration testleri yaz\u0131labilir.","title":"Yakla\u015f\u0131m"},{"location":"test-stratejisi/#ortam","text":"Her bir veritaban\u0131 modeli i\u00e7in seeder yaz\u0131lmal\u0131 ve hangi ortamda test yap\u0131l\u0131rsa yap\u0131ls\u0131n bu seederlar ile veri \u00fcretilmelidir. Mikroservislerin teker teker testi i\u00e7in Docker y\u00fckl\u00fc ve \u00e7al\u0131\u015f\u0131yor olan herhangi bir cihaz \u00fczerinde testler yap\u0131labilir. Pull Request yap\u0131ld\u0131\u011f\u0131nda \u00f6nceden belirlenmi\u015f olan pipeline \u00fczerinden automated testler \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Linux tabanl\u0131 cihazlar tercih edilmelidir. Kritik dosyalar ve veritabanlar\u0131 herhangi bir testten \u00f6nce mutlaka yedeklenmelidir ki herhangi bir veri kayb\u0131 ya\u015fanmas\u0131n.","title":"Ortam"},{"location":"test-stratejisi/#araclar","text":"Test yazarken kullan\u0131lan framework\u00fcn sunmu\u015f oldu\u011fu test yap\u0131s\u0131 kullan\u0131lmal\u0131d\u0131r. \u00d6zellikle unit testlerin proje ile tam entegre olmas\u0131 beklenir. Load testing ve proje b\u00fct\u00fcn\u00fcn\u00fcn testlerinde arac\u0131 programlar kullan\u0131labilir ve kullan\u0131lmal\u0131d\u0131r.","title":"Ara\u00e7lar"},{"location":"test-stratejisi/#yaynlama","text":"Herhangi bir test i\u00e7ermeyen veya hata veren testleri bulunan pull requestler kesinlikle kabul kabul edilemez. \u00c7\u00f6zmek istenen probleme uygun test mutlaka ve mutlaka yaz\u0131lmal\u0131d\u0131r. Testleri ba\u015far\u0131yla ge\u00e7en pull requestler ekip liderlerince projeye merge edilebilir.","title":"Yay\u0131nlama"},{"location":"TUBITAK-doc/Proje%C3%96zeti/","text":"Contains only part 1 and 2. SUMMARY of PROJECT - [TR] \u00dcniversitelerdeki baz\u0131 b\u00f6l\u00fcmlerin \u00f6\u011frenci say\u0131s\u0131n\u0131n fazla olmas\u0131 \u00f6\u011fretimi negatif etkilemektedir. \u00d6devlerin \u00f6\u011fretime olan katk\u0131s\u0131 tart\u0131\u015f\u0131lmaz bir ger\u00e7ektir. Sadece \u00f6devi yapmak de\u011fil ayn\u0131 zamanda \u00f6devi kontrol etmekte yine \u00f6devi yapmak kadar \u00f6\u011fretici bir fakt\u00f6rd\u00fcr. Fakat asistan azl\u0131\u011f\u0131 ve/veya \u00f6\u011frenci say\u0131s\u0131n\u0131n fazla olmas\u0131 \u00f6\u011fretmenlerin \u00f6dev vermesinde zorluklara yol a\u00e7maktad\u0131r. SOTAS, hem bu zorluklar\u0131 ortadan kald\u0131rmak hem de hem \u00f6dev yaparak hem de \u00f6dev kontrol ederek \u00f6\u011freten bir sistem kurmay\u0131 ve sorunlar\u0131 \u00e7ift tarafl\u0131 \u00e7\u00f6zmeyi hedeflemektedir. Kalabal\u0131k s\u0131n\u0131flarda okuyan \u00f6\u011frencilere birden fazla \u00f6dev verildi\u011fi zaman \u00f6devlerle ilgili sorular\u0131na ait geri d\u00f6n\u00fct almalar\u0131 zorla\u015fmaktad\u0131r. \u00d6\u011fretmenler \u00f6devleri kontrol etmeye \u00e7ok fazla zaman harcad\u0131\u011f\u0131ndan dolay\u0131 \u00f6\u011frencilere geri d\u00f6n\u00fc\u015f yapmakta zorluk \u00e7ekmektedirler. Bu noktada e\u011fitim sekteye u\u011framaktad\u0131r \u00e7\u00fcnk\u00fc \u00f6devin amac\u0131 \u00f6\u011frencinin verilen g\u00f6revi ara\u015ft\u0131rarak konuyla alakal\u0131 bilgi sahibi olmas\u0131 ve kendi kendini geli\u015ftirmesidir. Edindi\u011fi bilgiler yeterli olmad\u0131\u011f\u0131 durumda \u00f6\u011fretmeninden sordu\u011fu sorular vas\u0131tas\u0131yla bilgi edinmesidir. Bu durum kalabal\u0131k s\u0131n\u0131flar\u0131n oldu\u011fu e\u011fitim kurumlar\u0131nda halen \u00e7\u00f6z\u00fclememi\u015f olup \u00f6\u011frencinin e\u011fitimini k\u0131s\u0131tlamaktad\u0131r. Tam da bu noktada projemizin \u00f6nemi daha \u00e7ok anla\u015f\u0131lmaktad\u0131r. T\u00fcm bu sorunlar\u0131 \u00e7\u00f6zmesine ek olarak SOTAS, \u00f6\u011frenciye \u00f6dev kontrol ettirerek ba\u015fkalar\u0131n\u0131n edindi\u011fi bilgelere g\u00f6z atmas\u0131n\u0131 sa\u011flayan ve kendi ba\u015f\u0131na edinebilece\u011fi bilgiden fazlas\u0131n\u0131 onlar\u0131n \u00f6devlerinden edinmesini sa\u011flayarak e\u011fitimin kalitesini de artt\u0131rmaktad\u0131r. Bir ki\u015finin birden fazla ki\u015finin \u00f6devini kontrol etmesi bir noktada adil ortam\u0131n bozulmas\u0131na neden olmaktad\u0131r. SOTAS, \u00f6\u011frencinin kendisinin de ba\u015fkalar\u0131 taraf\u0131ndan de\u011ferlendirilece\u011fini bildi\u011fi ve bu y\u00fczden onu adil bir \u015fekilde not vermeye iten bir sistemdir. B\u00f6ylece \u00f6\u011frenciye d\u00fcr\u00fcst ve adil olmas\u0131n\u0131 da sa\u011flar. SOTAS'\u0131n t\u00fcm bu art\u0131lar\u0131n\u0131 bir yerde toplamam\u0131z gerekirse proje; \u00d6\u011fretmenlerin \u00f6dev vermemesindeki ana nedenler olan \u00f6\u011frenci fazlal\u0131\u011f\u0131 ve asistan azl\u0131\u011f\u0131 sorunlar\u0131n\u0131 ortadan kald\u0131r\u0131r, \u00d6devle e\u011fitimin yar\u0131m kalmas\u0131na neden olan \u00f6\u011frencinin geri d\u00f6n\u00fct alamamas\u0131 sorununu ortadan kald\u0131r\u0131r, \u00d6\u011frencinlerin sadece \u00f6dev yaparak de\u011fil ayn\u0131 zamanda \u00f6dev kantrol ederek te \u00f6\u011frenmesini sa\u011flar, \u00d6\u011frencilerin notlar\u0131n\u0131n adil bir \u015fekilde da\u011f\u0131t\u0131lmas\u0131n\u0131 sa\u011flar. SUMMARY of PROJECT - [EN] The high number of students in some departments in universities affects teaching negatively when it comes to homeworks. The contribution of homework to teaching is an indisputable fact. Not only doing the homework, but also checking the homework is as instructive as doing the homework. However, the lack of assistants and/or the high number of students cause difficulties in assigning homework for teachers. SOTAS aims to eliminate these difficulties and to establish a system that teaches both by doing homework and by checking homework and to solve the problems bilaterally. When students studying in crowded classrooms are given more than one homework, it becomes difficult to get feedback on their questions about homework. Teachers have a hard time getting back to students because they spend too much time checking homework. At this point, education is interrupted because the purpose of the homework is for the student to have knowledge about the subject by researching the given task and to improve himself. It is the acquisition of information through the questions asked by the teacher in case the information obtained is not sufficient. This situation has still not been resolved in educational institutions with crowded classrooms and limits the education of the student. At this point, the importance of our project is understood more. In addition to solving all these problems, SOTAS also increases the quality of education by having students check their homework, allowing them to take a look at the wisdom they have acquired, and obtaining more information from their homework than they can acquire on their own. One person checking the homework of more than one person causes the fair environment to deteriorate at some point. SOTAS is a system where the student knows that he/she will be scored by others and therefore pushes him/her to give fair grades. Thus, it also ensures that the student is honest and fair. If we need to collect all these pluses of SOTAS in one place, the project is; Eliminates the problems of excess student and lack of assistants, which are the main reasons why teachers do not give homework, Eliminates the problem of the student not getting feedback, which causes the education to be incomplete with homework, It allows students to learn not only by doing homework, but also by checking homework, It ensures the fair distribution of students' grades. SOTAS, \u00f6\u011frencilerin \u00f6dev yapmas\u0131n\u0131 ve di\u011fer arkada\u015flar\u0131n\u0131n \u00f6devlerini de\u011ferlendirerek puanlay\u0131p neden o puan\u0131 verdi\u011fine dair yorum yapmas\u0131n\u0131 sa\u011flayan bir platformdur.","title":"Proje\u00d6zeti"},{"location":"TUBITAK-doc/Proje%C3%96zeti/#summary_of_project_-_tr","text":"\u00dcniversitelerdeki baz\u0131 b\u00f6l\u00fcmlerin \u00f6\u011frenci say\u0131s\u0131n\u0131n fazla olmas\u0131 \u00f6\u011fretimi negatif etkilemektedir. \u00d6devlerin \u00f6\u011fretime olan katk\u0131s\u0131 tart\u0131\u015f\u0131lmaz bir ger\u00e7ektir. Sadece \u00f6devi yapmak de\u011fil ayn\u0131 zamanda \u00f6devi kontrol etmekte yine \u00f6devi yapmak kadar \u00f6\u011fretici bir fakt\u00f6rd\u00fcr. Fakat asistan azl\u0131\u011f\u0131 ve/veya \u00f6\u011frenci say\u0131s\u0131n\u0131n fazla olmas\u0131 \u00f6\u011fretmenlerin \u00f6dev vermesinde zorluklara yol a\u00e7maktad\u0131r. SOTAS, hem bu zorluklar\u0131 ortadan kald\u0131rmak hem de hem \u00f6dev yaparak hem de \u00f6dev kontrol ederek \u00f6\u011freten bir sistem kurmay\u0131 ve sorunlar\u0131 \u00e7ift tarafl\u0131 \u00e7\u00f6zmeyi hedeflemektedir. Kalabal\u0131k s\u0131n\u0131flarda okuyan \u00f6\u011frencilere birden fazla \u00f6dev verildi\u011fi zaman \u00f6devlerle ilgili sorular\u0131na ait geri d\u00f6n\u00fct almalar\u0131 zorla\u015fmaktad\u0131r. \u00d6\u011fretmenler \u00f6devleri kontrol etmeye \u00e7ok fazla zaman harcad\u0131\u011f\u0131ndan dolay\u0131 \u00f6\u011frencilere geri d\u00f6n\u00fc\u015f yapmakta zorluk \u00e7ekmektedirler. Bu noktada e\u011fitim sekteye u\u011framaktad\u0131r \u00e7\u00fcnk\u00fc \u00f6devin amac\u0131 \u00f6\u011frencinin verilen g\u00f6revi ara\u015ft\u0131rarak konuyla alakal\u0131 bilgi sahibi olmas\u0131 ve kendi kendini geli\u015ftirmesidir. Edindi\u011fi bilgiler yeterli olmad\u0131\u011f\u0131 durumda \u00f6\u011fretmeninden sordu\u011fu sorular vas\u0131tas\u0131yla bilgi edinmesidir. Bu durum kalabal\u0131k s\u0131n\u0131flar\u0131n oldu\u011fu e\u011fitim kurumlar\u0131nda halen \u00e7\u00f6z\u00fclememi\u015f olup \u00f6\u011frencinin e\u011fitimini k\u0131s\u0131tlamaktad\u0131r. Tam da bu noktada projemizin \u00f6nemi daha \u00e7ok anla\u015f\u0131lmaktad\u0131r. T\u00fcm bu sorunlar\u0131 \u00e7\u00f6zmesine ek olarak SOTAS, \u00f6\u011frenciye \u00f6dev kontrol ettirerek ba\u015fkalar\u0131n\u0131n edindi\u011fi bilgelere g\u00f6z atmas\u0131n\u0131 sa\u011flayan ve kendi ba\u015f\u0131na edinebilece\u011fi bilgiden fazlas\u0131n\u0131 onlar\u0131n \u00f6devlerinden edinmesini sa\u011flayarak e\u011fitimin kalitesini de artt\u0131rmaktad\u0131r. Bir ki\u015finin birden fazla ki\u015finin \u00f6devini kontrol etmesi bir noktada adil ortam\u0131n bozulmas\u0131na neden olmaktad\u0131r. SOTAS, \u00f6\u011frencinin kendisinin de ba\u015fkalar\u0131 taraf\u0131ndan de\u011ferlendirilece\u011fini bildi\u011fi ve bu y\u00fczden onu adil bir \u015fekilde not vermeye iten bir sistemdir. B\u00f6ylece \u00f6\u011frenciye d\u00fcr\u00fcst ve adil olmas\u0131n\u0131 da sa\u011flar. SOTAS'\u0131n t\u00fcm bu art\u0131lar\u0131n\u0131 bir yerde toplamam\u0131z gerekirse proje; \u00d6\u011fretmenlerin \u00f6dev vermemesindeki ana nedenler olan \u00f6\u011frenci fazlal\u0131\u011f\u0131 ve asistan azl\u0131\u011f\u0131 sorunlar\u0131n\u0131 ortadan kald\u0131r\u0131r, \u00d6devle e\u011fitimin yar\u0131m kalmas\u0131na neden olan \u00f6\u011frencinin geri d\u00f6n\u00fct alamamas\u0131 sorununu ortadan kald\u0131r\u0131r, \u00d6\u011frencinlerin sadece \u00f6dev yaparak de\u011fil ayn\u0131 zamanda \u00f6dev kantrol ederek te \u00f6\u011frenmesini sa\u011flar, \u00d6\u011frencilerin notlar\u0131n\u0131n adil bir \u015fekilde da\u011f\u0131t\u0131lmas\u0131n\u0131 sa\u011flar.","title":"SUMMARY of PROJECT - [TR]"},{"location":"TUBITAK-doc/Proje%C3%96zeti/#summary_of_project_-_en","text":"The high number of students in some departments in universities affects teaching negatively when it comes to homeworks. The contribution of homework to teaching is an indisputable fact. Not only doing the homework, but also checking the homework is as instructive as doing the homework. However, the lack of assistants and/or the high number of students cause difficulties in assigning homework for teachers. SOTAS aims to eliminate these difficulties and to establish a system that teaches both by doing homework and by checking homework and to solve the problems bilaterally. When students studying in crowded classrooms are given more than one homework, it becomes difficult to get feedback on their questions about homework. Teachers have a hard time getting back to students because they spend too much time checking homework. At this point, education is interrupted because the purpose of the homework is for the student to have knowledge about the subject by researching the given task and to improve himself. It is the acquisition of information through the questions asked by the teacher in case the information obtained is not sufficient. This situation has still not been resolved in educational institutions with crowded classrooms and limits the education of the student. At this point, the importance of our project is understood more. In addition to solving all these problems, SOTAS also increases the quality of education by having students check their homework, allowing them to take a look at the wisdom they have acquired, and obtaining more information from their homework than they can acquire on their own. One person checking the homework of more than one person causes the fair environment to deteriorate at some point. SOTAS is a system where the student knows that he/she will be scored by others and therefore pushes him/her to give fair grades. Thus, it also ensures that the student is honest and fair. If we need to collect all these pluses of SOTAS in one place, the project is; Eliminates the problems of excess student and lack of assistants, which are the main reasons why teachers do not give homework, Eliminates the problem of the student not getting feedback, which causes the education to be incomplete with homework, It allows students to learn not only by doing homework, but also by checking homework, It ensures the fair distribution of students' grades. SOTAS, \u00f6\u011frencilerin \u00f6dev yapmas\u0131n\u0131 ve di\u011fer arkada\u015flar\u0131n\u0131n \u00f6devlerini de\u011ferlendirerek puanlay\u0131p neden o puan\u0131 verdi\u011fine dair yorum yapmas\u0131n\u0131 sa\u011flayan bir platformdur.","title":"SUMMARY of PROJECT - [EN]"},{"location":"ekip/ekip/","text":"Ekip Aysema Mermer - Backend Ekip #5 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Beyaz\u0131t Barut\u00e7u - Backend Ekip #4 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Berkay \u00c7ubuk - Backend Proje Ekip Lideri Ekip #2 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Eyyup Boran \u00d6zkaya - Frontend Ekip #7 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 \u00c7a\u011fr\u0131 Ersunan - Backend Ekip #4 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Eren Kaymak\u00e7\u0131 - Frontend Ekip #8 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Erva \u00c7oban - Backend Ekip #6 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Fatih Demiraran - Backend Ekip #6 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Fatih Emin Karahan - Backend Ekip #3 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Ahmet Yusuf Birinci - Backend Backend Ekip Lideri Ekip #1 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Tufan Yi\u011fit \u00c7ift\u00e7io\u011flu - Backend Ekip #5 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 G\u00fcray G\u00fcl - Backend Ekip #5 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Muhammed Ali Tural - Backend Ekip #4 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Mert Karatekin - Backend Ekip #3 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 \u00d6mer \u00d6z - Frontend Frontend Ekip Lideri Ekip #7 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Salih Salur - Frontend Ekip #7 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 \u015eevket Binali - Backend Ekip #3 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Tolga \u00c7al\u0131\u015fkan - Frontend Ekip #7 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Utku Aydo\u011fdu - Backend Ekip #6 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131 Zekeriya Ay - Frontend Ekip #8 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Ekip"},{"location":"ekip/ekip/#ekip","text":"","title":"Ekip"},{"location":"ekip/ekip/#aysema_mermer_-_backend","text":"Ekip #5 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Aysema Mermer - Backend"},{"location":"ekip/ekip/#beyazt_barutcu_-_backend","text":"Ekip #4 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Beyaz\u0131t Barut\u00e7u - Backend"},{"location":"ekip/ekip/#berkay_cubuk_-_backend","text":"Proje Ekip Lideri Ekip #2 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Berkay \u00c7ubuk - Backend"},{"location":"ekip/ekip/#eyyup_boran_ozkaya_-_frontend","text":"Ekip #7 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Eyyup Boran \u00d6zkaya - Frontend"},{"location":"ekip/ekip/#cagr_ersunan_-_backend","text":"Ekip #4 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"\u00c7a\u011fr\u0131 Ersunan - Backend"},{"location":"ekip/ekip/#eren_kaymakc_-_frontend","text":"Ekip #8 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Eren Kaymak\u00e7\u0131 - Frontend"},{"location":"ekip/ekip/#erva_coban_-_backend","text":"Ekip #6 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Erva \u00c7oban - Backend"},{"location":"ekip/ekip/#fatih_demiraran_-_backend","text":"Ekip #6 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Fatih Demiraran - Backend"},{"location":"ekip/ekip/#fatih_emin_karahan_-_backend","text":"Ekip #3 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Fatih Emin Karahan - Backend"},{"location":"ekip/ekip/#ahmet_yusuf_birinci_-_backend","text":"Backend Ekip Lideri Ekip #1 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Ahmet Yusuf Birinci - Backend"},{"location":"ekip/ekip/#tufan_yigit_ciftcioglu_-_backend","text":"Ekip #5 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Tufan Yi\u011fit \u00c7ift\u00e7io\u011flu - Backend"},{"location":"ekip/ekip/#guray_gul_-_backend","text":"Ekip #5 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"G\u00fcray G\u00fcl - Backend"},{"location":"ekip/ekip/#muhammed_ali_tural_-_backend","text":"Ekip #4 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Muhammed Ali Tural - Backend"},{"location":"ekip/ekip/#mert_karatekin_-_backend","text":"Ekip #3 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Mert Karatekin - Backend"},{"location":"ekip/ekip/#omer_oz_-_frontend","text":"Frontend Ekip Lideri Ekip #7 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"\u00d6mer \u00d6z - Frontend"},{"location":"ekip/ekip/#salih_salur_-_frontend","text":"Ekip #7 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Salih Salur - Frontend"},{"location":"ekip/ekip/#sevket_binali_-_backend","text":"Ekip #3 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"\u015eevket Binali - Backend"},{"location":"ekip/ekip/#tolga_calskan_-_frontend","text":"Ekip #7 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Tolga \u00c7al\u0131\u015fkan - Frontend"},{"location":"ekip/ekip/#utku_aydogdu_-_backend","text":"Ekip #6 \u00dcyesi Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Utku Aydo\u011fdu - Backend"},{"location":"ekip/ekip/#zekeriya_ay_-_frontend","text":"Ekip #8 Lideri Tamamlanan Dok\u00fcmantasyon Issue'lar\u0131 Tamamlanan Backend Issue'lar\u0131 Tamamlanan Frontend Issue'lar\u0131","title":"Zekeriya Ay - Frontend"},{"location":"ekip/organizsayon/","text":"Organizasyon Organizasyon \u015eemas\u0131 Backend Organizasyon \u015eemas\u0131 Frontend Organizasyon \u015eemas\u0131","title":"Organizasyon"},{"location":"ekip/organizsayon/#organizasyon","text":"","title":"Organizasyon"},{"location":"ekip/organizsayon/#organizasyon_semas","text":"","title":"Organizasyon \u015eemas\u0131"},{"location":"ekip/organizsayon/#backend_organizasyon_semas","text":"","title":"Backend Organizasyon \u015eemas\u0131"},{"location":"ekip/organizsayon/#frontend_organizasyon_semas","text":"","title":"Frontend Organizasyon \u015eemas\u0131"},{"location":"ekip/sorumluluklar/","text":"Sorumluluklar SOTAS ekibinde yer alan her ekip \u00fcyesinin sorumluluklar\u0131 bulunmaktad\u0131r. Rol\u00fc gere\u011fi daha farkl\u0131 sorumluluklar\u0131 bulunabilir. Roller A\u015fa\u011f\u0131da SOTAS i\u00e7erisinde bulunan roller listelenmi\u015ftir. Her bir \u00fcyenin rol\u00fc gere\u011fi sahip oldu\u011fu sorumluluklar\u0131 kar\u015f\u0131lamas\u0131 beklenir. \u00dcye Kendisine atanm\u0131\u015f olan i\u015fleri belirlenen tarihe kadar teslim etmelidir Atanm\u0131\u015f olan i\u015fleri tamamlayabilmek i\u00e7in teknik bilgi eksikliklerini gidermelidir Ekip Lideri \u00dcyelerin sorumluluklar\u0131 Ekip Lideri i\u00e7in de ge\u00e7erlidir Proje i\u00e7in belirlenmi\u015f olan haftal\u0131k hedefleri ekip \u00fcyelerini do\u011fru koordine ederek belirlenen tarihe kadar tamamland\u0131\u011f\u0131ndan emin olmal\u0131d\u0131r G\u00f6rev da\u011f\u0131l\u0131mlar\u0131n\u0131 \u00fcyelerin tecr\u00fcbe ve ilgi seviyelerine g\u00f6re da\u011f\u0131tmaya \u00f6zen g\u00f6stermelidir Ekibinde eksik olarak g\u00f6rd\u00fc\u011f\u00fc teknik bilgileri tamamlamak i\u00e7in mini e\u011fitim ve toplant\u0131lar d\u00fczenlemelidir Proje Lideri Ekip Liderlerinin sorumluluklar\u0131 Proje Lideri i\u00e7in de ge\u00e7erlidir Backend ve Frontend ekiplerinin uyum i\u00e7erisinde gitmesini sa\u011flamal\u0131d\u0131r Ekip Liderleri ile ileti\u015fim i\u00e7erisinde olup eksik noktalar\u0131n tamamlanmas\u0131 i\u00e7in \u00e7al\u0131\u015fmalar\u0131 ba\u015flatmal\u0131d\u0131r","title":"Sorumluluklar"},{"location":"ekip/sorumluluklar/#sorumluluklar","text":"SOTAS ekibinde yer alan her ekip \u00fcyesinin sorumluluklar\u0131 bulunmaktad\u0131r. Rol\u00fc gere\u011fi daha farkl\u0131 sorumluluklar\u0131 bulunabilir.","title":"Sorumluluklar"},{"location":"ekip/sorumluluklar/#roller","text":"A\u015fa\u011f\u0131da SOTAS i\u00e7erisinde bulunan roller listelenmi\u015ftir. Her bir \u00fcyenin rol\u00fc gere\u011fi sahip oldu\u011fu sorumluluklar\u0131 kar\u015f\u0131lamas\u0131 beklenir.","title":"Roller"},{"location":"ekip/sorumluluklar/#uye","text":"Kendisine atanm\u0131\u015f olan i\u015fleri belirlenen tarihe kadar teslim etmelidir Atanm\u0131\u015f olan i\u015fleri tamamlayabilmek i\u00e7in teknik bilgi eksikliklerini gidermelidir","title":"\u00dcye"},{"location":"ekip/sorumluluklar/#ekip_lideri","text":"\u00dcyelerin sorumluluklar\u0131 Ekip Lideri i\u00e7in de ge\u00e7erlidir Proje i\u00e7in belirlenmi\u015f olan haftal\u0131k hedefleri ekip \u00fcyelerini do\u011fru koordine ederek belirlenen tarihe kadar tamamland\u0131\u011f\u0131ndan emin olmal\u0131d\u0131r G\u00f6rev da\u011f\u0131l\u0131mlar\u0131n\u0131 \u00fcyelerin tecr\u00fcbe ve ilgi seviyelerine g\u00f6re da\u011f\u0131tmaya \u00f6zen g\u00f6stermelidir Ekibinde eksik olarak g\u00f6rd\u00fc\u011f\u00fc teknik bilgileri tamamlamak i\u00e7in mini e\u011fitim ve toplant\u0131lar d\u00fczenlemelidir","title":"Ekip Lideri"},{"location":"ekip/sorumluluklar/#proje_lideri","text":"Ekip Liderlerinin sorumluluklar\u0131 Proje Lideri i\u00e7in de ge\u00e7erlidir Backend ve Frontend ekiplerinin uyum i\u00e7erisinde gitmesini sa\u011flamal\u0131d\u0131r Ekip Liderleri ile ileti\u015fim i\u00e7erisinde olup eksik noktalar\u0131n tamamlanmas\u0131 i\u00e7in \u00e7al\u0131\u015fmalar\u0131 ba\u015flatmal\u0131d\u0131r","title":"Proje Lideri"},{"location":"slaytlar/slide1/","text":"Problem S\u0131n\u0131fta \u00e7ok fazla \u00f6\u011frenci var \u00d6\u011fretmenin herbir \u00f6\u011frencinin \u00f6devini kontrol etmesi kolay de\u011fil \u00d6\u011frencilerin, di\u011fer \u00f6\u011frencilerden \u00f6devleri i\u00e7in geri d\u00f6n\u00fc\u015f alabilecekleri bir ortam bulunmuyor \u00c7\u00f6z\u00fcm \u00d6devleri \u00f6\u011frenciler kendi aralar\u0131nda de\u011ferlendirecek ve notland\u0131racak \u00d6\u011fretmen sadece \u00f6devleri belirleyecek, ihtiya\u00e7 halinde notland\u0131rmaya m\u00fcdahale edebilecek SOTAS Nedir? Scoring Others' Tasks System SOTAS, klasik not verme sistemine alternatif daha kolay ve adil bir \u00e7\u00f6z\u00fcm getirme hedefini ta\u015f\u0131r. Yaz\u0131l\u0131m, da\u011f\u0131t\u0131k not verme sistemi mant\u0131\u011f\u0131n\u0131 kullan\u0131r ve bu sayede \u00f6\u011frencilerin de \u00f6\u011fretim g\u00f6revlisinin yerine not verme s\u00fcrecine kat\u0131lmas\u0131n\u0131 ama\u00e7lar. Kullan\u0131lan Teknolojiler Backend - JAVA - Quarkus - GraalVM - SQLite Frontend - Angular - Typescript - HTML - CSS, SCSS Workflow - Jetbrains Spaces - Git - Discord Requirement Diagram\u0131 Use-Case Diagram\u0131 Textual Analysis Ekip Olarak Projeyi Nas\u0131l Y\u00fcr\u00fctmeyi Planl\u0131yoruz? 20 ki\u015fi olduk\u00e7a fazla bir say\u0131 ve do\u011fru \u015fekilde kordine olunmas\u0131 gerekiyor. Bunun i\u00e7in ekibimizi mikro ekiplere b\u00f6lmeyi kararla\u015ft\u0131rd\u0131k. Frontend ve Backend \u015feklinde iki ana grup ve onlar\u0131n i\u00e7inde bulunan iki veya \u00fc\u00e7er ki\u015filik gruplardan olu\u015fturduk.","title":"SOTAS(Scoring Others' Tasks System)"},{"location":"slaytlar/slide1/#problem","text":"S\u0131n\u0131fta \u00e7ok fazla \u00f6\u011frenci var \u00d6\u011fretmenin herbir \u00f6\u011frencinin \u00f6devini kontrol etmesi kolay de\u011fil \u00d6\u011frencilerin, di\u011fer \u00f6\u011frencilerden \u00f6devleri i\u00e7in geri d\u00f6n\u00fc\u015f alabilecekleri bir ortam bulunmuyor","title":"Problem"},{"location":"slaytlar/slide1/#cozum","text":"\u00d6devleri \u00f6\u011frenciler kendi aralar\u0131nda de\u011ferlendirecek ve notland\u0131racak \u00d6\u011fretmen sadece \u00f6devleri belirleyecek, ihtiya\u00e7 halinde notland\u0131rmaya m\u00fcdahale edebilecek","title":"\u00c7\u00f6z\u00fcm"},{"location":"slaytlar/slide1/#sotas_nedir","text":"","title":"SOTAS Nedir?"},{"location":"slaytlar/slide1/#scoring_others_tasks_system","text":"SOTAS, klasik not verme sistemine alternatif daha kolay ve adil bir \u00e7\u00f6z\u00fcm getirme hedefini ta\u015f\u0131r. Yaz\u0131l\u0131m, da\u011f\u0131t\u0131k not verme sistemi mant\u0131\u011f\u0131n\u0131 kullan\u0131r ve bu sayede \u00f6\u011frencilerin de \u00f6\u011fretim g\u00f6revlisinin yerine not verme s\u00fcrecine kat\u0131lmas\u0131n\u0131 ama\u00e7lar.","title":"Scoring Others' Tasks System"},{"location":"slaytlar/slide1/#kullanlan_teknolojiler","text":"","title":"Kullan\u0131lan Teknolojiler"},{"location":"slaytlar/slide1/#backend","text":"- JAVA - Quarkus - GraalVM - SQLite","title":"Backend"},{"location":"slaytlar/slide1/#frontend","text":"- Angular - Typescript - HTML - CSS, SCSS","title":"Frontend"},{"location":"slaytlar/slide1/#workflow","text":"- Jetbrains Spaces - Git - Discord","title":"Workflow"},{"location":"slaytlar/slide1/#requirement_diagram","text":"","title":"Requirement Diagram\u0131"},{"location":"slaytlar/slide1/#use-case_diagram","text":"","title":"Use-Case Diagram\u0131"},{"location":"slaytlar/slide1/#textual_analysis","text":"","title":"Textual Analysis"},{"location":"slaytlar/slide1/#ekip_olarak_projeyi_nasl_yurutmeyi_planlyoruz","text":"20 ki\u015fi olduk\u00e7a fazla bir say\u0131 ve do\u011fru \u015fekilde kordine olunmas\u0131 gerekiyor. Bunun i\u00e7in ekibimizi mikro ekiplere b\u00f6lmeyi kararla\u015ft\u0131rd\u0131k. Frontend ve Backend \u015feklinde iki ana grup ve onlar\u0131n i\u00e7inde bulunan iki veya \u00fc\u00e7er ki\u015filik gruplardan olu\u015fturduk.","title":"Ekip Olarak Projeyi Nas\u0131l Y\u00fcr\u00fctmeyi Planl\u0131yoruz?"},{"location":"slaytlar/slide2/","text":"Organizsayon \u015eemas\u0131 Backend Ekip \u015eemas\u0131 Frontend Ekip \u015eemas\u0131 Gantt \u015eemas\u0131 Grup \u0130\u00e7i Notland\u0131rma Y\u00f6ntemi Proje i\u00e7erisinde yap\u0131lmas\u0131 gereken i\u015fler GitHub \u00fczerinde yapacak ki\u015filere atan\u0131yor Atanan i\u015flerin belirli bir biti\u015f s\u00fcresi ve kar\u015f\u0131lamas\u0131 gereken \u015fartlar\u0131 bulunuyor GitHub \u00fczerinde herkesin eri\u015fimine a\u00e7\u0131k olan bir dosya \u00fczerinde her ki\u015finin tamamlad\u0131\u011f\u0131 i\u015f say\u0131s\u0131 ve tamamlanan i\u015flerin 1'den 5'e kadar olacak \u015fekilde de\u011ferlerinin toplam\u0131 yazacak Her haftal\u0131k hedef sonras\u0131nda bu tablo gereken de\u011ferler ile i\u015flenecek ve kay\u0131t alt\u0131na al\u0131nacak Proje bitiminde herkesin yapt\u0131\u011f\u0131 i\u015fler dizilecek ve bir s\u0131ralama olu\u015fturulacak Olu\u015fturulan s\u0131ralamaya g\u00f6re de ortak bir \u015fekilde herkese not verilecek Verilen notlar sonucu istenen \u015fartlar kar\u015f\u0131lanana kadar tekrar notland\u0131rma yap\u0131lacak DevOps Dok\u00fcmantasyonu Nedir bu DevOps? DevOps, fikirlerin production'a deploylanmas\u0131ndan \u00e7\u0131kan problemlerden ders al\u0131nmas\u0131na kadarki s\u00fcre\u00e7tir. DevOps Dok\u00fcmantasyonu Neden DevOps? Bir projeyi master branch \u00fczerinde bir commit ile tamamlamak her ne kadar cazip g\u00f6z\u00fcksede bizce bir katliamd\u0131r. Bir projeyi ekip halinde ger\u00e7ekle\u015ftirecek ve ya\u015fatmaya devam edeceksek kimin ne yapaca\u011f\u0131, nas\u0131l yapaca\u011f\u0131 ve neler olaca\u011f\u0131 \u00e7ok \u00f6nemlidir. DevOps bu noktada bize yard\u0131mc\u0131 olmaktad\u0131r. DevOps Dok\u00fcmantasyonu 0'dan Sonuca S\u00fcre\u00e7 Issue Olu\u015fturma Geli\u015ftirmek veya eklenmek istenen \u00f6zellik hakk\u0131nda halihaz\u0131rda bulunan issue templatelerinden yararlanarak detayl\u0131 bir issue olu\u015fturulmal\u0131d\u0131r. Olu\u015fturulan issue: En az 1 ki\u015fiye atanmal\u0131 Uygun label'\u0131 i\u00e7ermeli Bir projeye ba\u011flanmal\u0131 Uygun milestone'a ba\u011flanmal\u0131 DevOps Dok\u00fcmantasyonu Issue \u00dczerinde \u00c7al\u0131\u015fmaya Ba\u015flama \u00dczerinde \u00e7al\u0131\u015fmak istedi\u011finiz issue ilk olarak proje i\u00e7erisinde Todo 'dan In Progress 'e al\u0131nmal\u0131d\u0131r ki ekibin kimin \u015fu anda ne yapt\u0131\u011f\u0131yla ilgili genel bir fikri olabilsin. E\u011fer bu issue ile ilk defa \u00e7al\u0131\u015fmaya ba\u015fland\u0131ysa ona ait bir branch olu\u015fturulmal\u0131. Branch ad\u0131 dok\u00fcmantasyonlar i\u00e7in doc-issueKodu , frontend i\u00e7in f-issueKodu ve backend i\u00e7in b-issueKodu olmal\u0131d\u0131r. Issue kodlar\u0131 ba\u015fl\u0131\u011f\u0131n yan\u0131nda bulunan # i\u015faretiyle ba\u015flayan say\u0131lard\u0131r. DevOps Dok\u00fcmantasyonu Testler Projelerin can damar\u0131 olan testler koda giri\u015fmeden \u00f6nce belirlenmeli ve yaz\u0131lmal\u0131d\u0131r. Yaz\u0131lm\u0131\u015f olan testler kar\u015f\u0131land\u0131\u011f\u0131nda pull request a\u00e7\u0131labilir ve kimsenin kodu etkilenmeden s\u00fcrece devam edilebilir. DevOps Dok\u00fcmantasyonu Yap\u0131lan \u00c7al\u0131\u015fmada \u0130lerleme Yap\u0131lan geli\u015ftirme hangi konu ile ilgili olursa olsun mutlaka k\u00fc\u00e7\u00fck commitler at\u0131larak ilerlenmelidir. B\u00f6ylelikle herhangi bir sorunda geriye d\u00f6n\u00fc\u015f kolayla\u015fm\u0131\u015f oluyor. Issue i\u00e7in belirlenmi\u015f hedefleri kar\u015f\u0131lad\u0131\u011f\u0131n\u0131zda da ekip liderinizin branchine olacak \u015fekilde veya ihtiyaca g\u00f6re master'a olacak \u015fekilde ekip liderinizi reviewer olarak i\u015faretleyip pull request olu\u015fturmal\u0131s\u0131n\u0131z. Pull request a\u00e7t\u0131\u011f\u0131n\u0131zda otomatik olarak kodunuz test edilir ve sistem taraf\u0131ndan uygun olup olmad\u0131\u011f\u0131na karar verilir. Sistemin uygun g\u00f6rmedi\u011fi pull requestler tekrardan incelenmeli ve hatalar\u0131 d\u00fczeltildikten sonra tekrar olu\u015fturulmal\u0131d\u0131r. DevOps Dok\u00fcmantasyonu Code Review Code review s\u00fcrecinde tamamlam\u0131\u015f oldu\u011funuz i\u015f ekip liderinizce kontrol edilir ve uygun g\u00f6r\u00fcl\u00fcrse gerekli branch'e eklenir. Kodu inceleyecek ki\u015finin kodu anlayabilmesi de sa\u011fl\u0131kl\u0131 ilerleyebilmek i\u00e7in \u00e7ok kritiktir. Bu noktada temiz ve anla\u015f\u0131l\u0131r kod yazmak \u00f6nemlidir. Onaylanm\u0131\u015f olmas\u0131na ra\u011fmen ileriki s\u00fcre\u00e7te hata \u00e7\u0131karan pull requestlerin sorumlulu\u011fu code review yapan ki\u015fiyle pull request iste\u011fini a\u00e7an ki\u015fidedir. Bu sebeple kodlar\u0131 inceleyecek arkada\u015flar\u0131n emin olduktan sonra merge etmeleri kendileri i\u00e7in ve proje i\u00e7in b\u00fcy\u00fck \u00f6neme sahiptir. DevOps Dok\u00fcmantasyonu Deployment Her repositorynin master (veya main) branch'i o projenin son halini temsil eder ve \u00e7al\u0131\u015fabilir durumda olmal\u0131d\u0131r. Otomatik deployment sayesinde ana branchlerde bir de\u011fi\u015fiklik yap\u0131ld\u0131\u011f\u0131nda demo sunucular\u0131na deploy edilir. Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar GitHub Kanban board ve milestonelar Issue ad\u0131n\u0131 verdi\u011fimiz gerek yeni \u00f6zellik ekleyebildi\u011fimiz gerekirse de mevcut olan \u00f6zellikler \u00fczerinde de\u011fi\u015fiklik yapabildi\u011fimiz ve buradan proje kanban tablosuna y\u00f6nlendirebildi\u011fimiz yap\u0131lar Actions ad\u0131nda bizim \u00f6zel bir \u015fekilde yazabildi\u011fimiz veya mevcut olan ve \u00f6nceden yaz\u0131lm\u0131\u015f \u015femalar\u0131 kullanabildi\u011fimiz pipeline Discord ile entegre olup canl\u0131 bildirimler Pull Requestler ile code review ve yorum yapma olana\u011f\u0131 Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar CircleCI GitHub Actionlar'\u0131n yetersiz kald\u0131\u011f\u0131 noktada ge\u00e7i\u015f yapmay\u0131 planl\u0131yoruz Ayl\u0131k 6000 saate kadar build s\u00fcresi sunuyor Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar CodeFactor Kod kalitesini \u00f6l\u00e7ebiliyor Issue'lar i\u00e7in \u00f6neri sunuyor Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar Otomatik Testler Angular ve Quarkus i\u00e7erisinde bulunan test yap\u0131lar\u0131 Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar Netlify Frontend uygulamalar\u0131m\u0131z\u0131 GitHub ile entegre \u015fekilde deploy etmek i\u00e7in Test Stratejisi Kapsam SOTAS projesinde t\u00fcm ekip \u00fcyeleri geli\u015ftirme, d\u00fczenleme veya ekleme yaparken test yazmakla sorumludur. \u00d6nceden kararla\u015f\u0131t\u0131r\u0131lm\u0131\u015f veya beklenmedik durumlar d\u0131\u015f\u0131nda yap\u0131lan t\u00fcm pull requestlerin code reviewlar\u0131 \u00fcyelerin ekip liderlerince yap\u0131lmal\u0131d\u0131r. \u00d6r: Ekip 1 i\u00e7erisindeki t\u00fcm \u00fcyeler ekip Ekip 1 liderine code review yapt\u0131rmal\u0131d\u0131r. Ekip 1'in \u00fcst\u00fcndeki ekibe ise Ekip 1'in lideri pull request a\u00e7\u0131p \u00fcst ekip liderine kodlar\u0131 onaylatmal\u0131d\u0131r. Gerek frontend gerekse de backend geli\u015ftirmeleri yap\u0131l\u0131rken ilk olarak yap\u0131lan geli\u015ftirme i\u00e7in test yaz\u0131lmal\u0131d\u0131r. Test yaz\u0131lmadan kabul edilen code reviewlardan ekip liderleri sorumlu olacakt\u0131r. Test Stratejisi Yakla\u015f\u0131m Yap\u0131lan her geli\u015ftirme i\u00e7in problemi kapsayacak kadar unit test yaz\u0131lmal\u0131d\u0131r. \u00c7e\u015fitli servislerin, 3. parti API'lar\u0131n ve sistemin entegrasyonunu kontrol edebilmek i\u00e7in belli aral\u0131klarla smoke testler, performance testleri ve integration testleri yaz\u0131labilir. Test Stratejisi Ortam Her bir veritaban\u0131 modeli i\u00e7in seeder yaz\u0131lmal\u0131 ve hangi ortamda test yap\u0131l\u0131rsa yap\u0131ls\u0131n bu seederlar ile veri \u00fcretilmelidir. Mikroservislerin teker teker testi i\u00e7in Docker y\u00fckl\u00fc ve \u00e7al\u0131\u015f\u0131yor olan herhangi bir cihaz \u00fczerinde testler yap\u0131labilir. Pull Request yap\u0131ld\u0131\u011f\u0131nda \u00f6nceden belirlenmi\u015f olan pipeline \u00fczerinden automated testler \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Linux tabanl\u0131 cihazlar tercih edilmelidir. Kritik dosyalar ve veritabanlar\u0131 herhangi bir testten \u00f6nce mutlaka yedeklenmelidir ki herhangi bir veri kayb\u0131 ya\u015fanmas\u0131n. Test Stratejisi Ara\u00e7lar Test yazarken kullan\u0131lan framework\u00fcn sunmu\u015f oldu\u011fu test yap\u0131s\u0131 kullan\u0131lmal\u0131d\u0131r. \u00d6zellikle unit testlerin proje ile tam entegre olmas\u0131 beklenir. Load testing ve proje b\u00fct\u00fcn\u00fcn\u00fcn testlerinde arac\u0131 programlar kullan\u0131labilir ve kullan\u0131lmal\u0131d\u0131r. Test Stratejisi Yay\u0131nlama Herhangi bir test i\u00e7ermeyen veya hata veren testleri bulunan pull requestler kesinlikle kabul edilemez. \u00c7\u00f6zmek istenen probleme uygun test mutlaka ve mutlaka yaz\u0131lmal\u0131d\u0131r. Testleri ba\u015far\u0131yla ge\u00e7en pull requestler ekip liderlerince projeye merge edilebilir. Dok\u00fcmanlar\u0131m\u0131z A\u00e7\u0131k Kaynakl\u0131","title":"SOTAS(Scoring Others' Tasks System)"},{"location":"slaytlar/slide2/#organizsayon_semas","text":"","title":"Organizsayon \u015eemas\u0131"},{"location":"slaytlar/slide2/#backend_ekip_semas","text":"","title":"Backend Ekip \u015eemas\u0131"},{"location":"slaytlar/slide2/#frontend_ekip_semas","text":"","title":"Frontend Ekip \u015eemas\u0131"},{"location":"slaytlar/slide2/#gantt_semas","text":"","title":"Gantt \u015eemas\u0131"},{"location":"slaytlar/slide2/#grup_ici_notlandrma_yontemi","text":"Proje i\u00e7erisinde yap\u0131lmas\u0131 gereken i\u015fler GitHub \u00fczerinde yapacak ki\u015filere atan\u0131yor Atanan i\u015flerin belirli bir biti\u015f s\u00fcresi ve kar\u015f\u0131lamas\u0131 gereken \u015fartlar\u0131 bulunuyor GitHub \u00fczerinde herkesin eri\u015fimine a\u00e7\u0131k olan bir dosya \u00fczerinde her ki\u015finin tamamlad\u0131\u011f\u0131 i\u015f say\u0131s\u0131 ve tamamlanan i\u015flerin 1'den 5'e kadar olacak \u015fekilde de\u011ferlerinin toplam\u0131 yazacak Her haftal\u0131k hedef sonras\u0131nda bu tablo gereken de\u011ferler ile i\u015flenecek ve kay\u0131t alt\u0131na al\u0131nacak Proje bitiminde herkesin yapt\u0131\u011f\u0131 i\u015fler dizilecek ve bir s\u0131ralama olu\u015fturulacak Olu\u015fturulan s\u0131ralamaya g\u00f6re de ortak bir \u015fekilde herkese not verilecek Verilen notlar sonucu istenen \u015fartlar kar\u015f\u0131lanana kadar tekrar notland\u0131rma yap\u0131lacak","title":"Grup \u0130\u00e7i Notland\u0131rma Y\u00f6ntemi"},{"location":"slaytlar/slide2/#devops_dokumantasyonu","text":"","title":"DevOps Dok\u00fcmantasyonu"},{"location":"slaytlar/slide2/#nedir_bu_devops","text":"DevOps, fikirlerin production'a deploylanmas\u0131ndan \u00e7\u0131kan problemlerden ders al\u0131nmas\u0131na kadarki s\u00fcre\u00e7tir.","title":"Nedir bu DevOps?"},{"location":"slaytlar/slide2/#devops_dokumantasyonu_1","text":"","title":"DevOps Dok\u00fcmantasyonu"},{"location":"slaytlar/slide2/#neden_devops","text":"Bir projeyi master branch \u00fczerinde bir commit ile tamamlamak her ne kadar cazip g\u00f6z\u00fcksede bizce bir katliamd\u0131r. Bir projeyi ekip halinde ger\u00e7ekle\u015ftirecek ve ya\u015fatmaya devam edeceksek kimin ne yapaca\u011f\u0131, nas\u0131l yapaca\u011f\u0131 ve neler olaca\u011f\u0131 \u00e7ok \u00f6nemlidir. DevOps bu noktada bize yard\u0131mc\u0131 olmaktad\u0131r.","title":"Neden DevOps?"},{"location":"slaytlar/slide2/#devops_dokumantasyonu_2","text":"","title":"DevOps Dok\u00fcmantasyonu"},{"location":"slaytlar/slide2/#0dan_sonuca_surec","text":"","title":"0'dan Sonuca S\u00fcre\u00e7"},{"location":"slaytlar/slide2/#issue_olusturma","text":"Geli\u015ftirmek veya eklenmek istenen \u00f6zellik hakk\u0131nda halihaz\u0131rda bulunan issue templatelerinden yararlanarak detayl\u0131 bir issue olu\u015fturulmal\u0131d\u0131r. Olu\u015fturulan issue: En az 1 ki\u015fiye atanmal\u0131 Uygun label'\u0131 i\u00e7ermeli Bir projeye ba\u011flanmal\u0131 Uygun milestone'a ba\u011flanmal\u0131","title":"Issue Olu\u015fturma"},{"location":"slaytlar/slide2/#devops_dokumantasyonu_3","text":"","title":"DevOps Dok\u00fcmantasyonu"},{"location":"slaytlar/slide2/#issue_uzerinde_calsmaya_baslama","text":"\u00dczerinde \u00e7al\u0131\u015fmak istedi\u011finiz issue ilk olarak proje i\u00e7erisinde Todo 'dan In Progress 'e al\u0131nmal\u0131d\u0131r ki ekibin kimin \u015fu anda ne yapt\u0131\u011f\u0131yla ilgili genel bir fikri olabilsin. E\u011fer bu issue ile ilk defa \u00e7al\u0131\u015fmaya ba\u015fland\u0131ysa ona ait bir branch olu\u015fturulmal\u0131. Branch ad\u0131 dok\u00fcmantasyonlar i\u00e7in doc-issueKodu , frontend i\u00e7in f-issueKodu ve backend i\u00e7in b-issueKodu olmal\u0131d\u0131r. Issue kodlar\u0131 ba\u015fl\u0131\u011f\u0131n yan\u0131nda bulunan # i\u015faretiyle ba\u015flayan say\u0131lard\u0131r.","title":"Issue \u00dczerinde \u00c7al\u0131\u015fmaya Ba\u015flama"},{"location":"slaytlar/slide2/#devops_dokumantasyonu_4","text":"","title":"DevOps Dok\u00fcmantasyonu"},{"location":"slaytlar/slide2/#testler","text":"Projelerin can damar\u0131 olan testler koda giri\u015fmeden \u00f6nce belirlenmeli ve yaz\u0131lmal\u0131d\u0131r. Yaz\u0131lm\u0131\u015f olan testler kar\u015f\u0131land\u0131\u011f\u0131nda pull request a\u00e7\u0131labilir ve kimsenin kodu etkilenmeden s\u00fcrece devam edilebilir.","title":"Testler"},{"location":"slaytlar/slide2/#devops_dokumantasyonu_5","text":"","title":"DevOps Dok\u00fcmantasyonu"},{"location":"slaytlar/slide2/#yaplan_calsmada_ilerleme","text":"Yap\u0131lan geli\u015ftirme hangi konu ile ilgili olursa olsun mutlaka k\u00fc\u00e7\u00fck commitler at\u0131larak ilerlenmelidir. B\u00f6ylelikle herhangi bir sorunda geriye d\u00f6n\u00fc\u015f kolayla\u015fm\u0131\u015f oluyor. Issue i\u00e7in belirlenmi\u015f hedefleri kar\u015f\u0131lad\u0131\u011f\u0131n\u0131zda da ekip liderinizin branchine olacak \u015fekilde veya ihtiyaca g\u00f6re master'a olacak \u015fekilde ekip liderinizi reviewer olarak i\u015faretleyip pull request olu\u015fturmal\u0131s\u0131n\u0131z. Pull request a\u00e7t\u0131\u011f\u0131n\u0131zda otomatik olarak kodunuz test edilir ve sistem taraf\u0131ndan uygun olup olmad\u0131\u011f\u0131na karar verilir. Sistemin uygun g\u00f6rmedi\u011fi pull requestler tekrardan incelenmeli ve hatalar\u0131 d\u00fczeltildikten sonra tekrar olu\u015fturulmal\u0131d\u0131r.","title":"Yap\u0131lan \u00c7al\u0131\u015fmada \u0130lerleme"},{"location":"slaytlar/slide2/#devops_dokumantasyonu_6","text":"","title":"DevOps Dok\u00fcmantasyonu"},{"location":"slaytlar/slide2/#code_review","text":"Code review s\u00fcrecinde tamamlam\u0131\u015f oldu\u011funuz i\u015f ekip liderinizce kontrol edilir ve uygun g\u00f6r\u00fcl\u00fcrse gerekli branch'e eklenir. Kodu inceleyecek ki\u015finin kodu anlayabilmesi de sa\u011fl\u0131kl\u0131 ilerleyebilmek i\u00e7in \u00e7ok kritiktir. Bu noktada temiz ve anla\u015f\u0131l\u0131r kod yazmak \u00f6nemlidir. Onaylanm\u0131\u015f olmas\u0131na ra\u011fmen ileriki s\u00fcre\u00e7te hata \u00e7\u0131karan pull requestlerin sorumlulu\u011fu code review yapan ki\u015fiyle pull request iste\u011fini a\u00e7an ki\u015fidedir. Bu sebeple kodlar\u0131 inceleyecek arkada\u015flar\u0131n emin olduktan sonra merge etmeleri kendileri i\u00e7in ve proje i\u00e7in b\u00fcy\u00fck \u00f6neme sahiptir.","title":"Code Review"},{"location":"slaytlar/slide2/#devops_dokumantasyonu_7","text":"","title":"DevOps Dok\u00fcmantasyonu"},{"location":"slaytlar/slide2/#deployment","text":"Her repositorynin master (veya main) branch'i o projenin son halini temsil eder ve \u00e7al\u0131\u015fabilir durumda olmal\u0131d\u0131r. Otomatik deployment sayesinde ana branchlerde bir de\u011fi\u015fiklik yap\u0131ld\u0131\u011f\u0131nda demo sunucular\u0131na deploy edilir.","title":"Deployment"},{"location":"slaytlar/slide2/#otomasyon_icin_kullanlacak_yaplar","text":"","title":"Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar"},{"location":"slaytlar/slide2/#github","text":"Kanban board ve milestonelar Issue ad\u0131n\u0131 verdi\u011fimiz gerek yeni \u00f6zellik ekleyebildi\u011fimiz gerekirse de mevcut olan \u00f6zellikler \u00fczerinde de\u011fi\u015fiklik yapabildi\u011fimiz ve buradan proje kanban tablosuna y\u00f6nlendirebildi\u011fimiz yap\u0131lar Actions ad\u0131nda bizim \u00f6zel bir \u015fekilde yazabildi\u011fimiz veya mevcut olan ve \u00f6nceden yaz\u0131lm\u0131\u015f \u015femalar\u0131 kullanabildi\u011fimiz pipeline Discord ile entegre olup canl\u0131 bildirimler Pull Requestler ile code review ve yorum yapma olana\u011f\u0131","title":"GitHub"},{"location":"slaytlar/slide2/#otomasyon_icin_kullanlacak_yaplar_1","text":"","title":"Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar"},{"location":"slaytlar/slide2/#circleci","text":"GitHub Actionlar'\u0131n yetersiz kald\u0131\u011f\u0131 noktada ge\u00e7i\u015f yapmay\u0131 planl\u0131yoruz Ayl\u0131k 6000 saate kadar build s\u00fcresi sunuyor","title":"CircleCI"},{"location":"slaytlar/slide2/#otomasyon_icin_kullanlacak_yaplar_2","text":"","title":"Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar"},{"location":"slaytlar/slide2/#codefactor","text":"Kod kalitesini \u00f6l\u00e7ebiliyor Issue'lar i\u00e7in \u00f6neri sunuyor","title":"CodeFactor"},{"location":"slaytlar/slide2/#otomasyon_icin_kullanlacak_yaplar_3","text":"","title":"Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar"},{"location":"slaytlar/slide2/#otomatik_testler","text":"Angular ve Quarkus i\u00e7erisinde bulunan test yap\u0131lar\u0131","title":"Otomatik Testler"},{"location":"slaytlar/slide2/#otomasyon_icin_kullanlacak_yaplar_4","text":"","title":"Otomasyon \u0130\u00e7in Kullan\u0131lacak Yap\u0131lar"},{"location":"slaytlar/slide2/#netlify","text":"Frontend uygulamalar\u0131m\u0131z\u0131 GitHub ile entegre \u015fekilde deploy etmek i\u00e7in","title":"Netlify"},{"location":"slaytlar/slide2/#test_stratejisi","text":"","title":"Test Stratejisi"},{"location":"slaytlar/slide2/#kapsam","text":"SOTAS projesinde t\u00fcm ekip \u00fcyeleri geli\u015ftirme, d\u00fczenleme veya ekleme yaparken test yazmakla sorumludur. \u00d6nceden kararla\u015f\u0131t\u0131r\u0131lm\u0131\u015f veya beklenmedik durumlar d\u0131\u015f\u0131nda yap\u0131lan t\u00fcm pull requestlerin code reviewlar\u0131 \u00fcyelerin ekip liderlerince yap\u0131lmal\u0131d\u0131r. \u00d6r: Ekip 1 i\u00e7erisindeki t\u00fcm \u00fcyeler ekip Ekip 1 liderine code review yapt\u0131rmal\u0131d\u0131r. Ekip 1'in \u00fcst\u00fcndeki ekibe ise Ekip 1'in lideri pull request a\u00e7\u0131p \u00fcst ekip liderine kodlar\u0131 onaylatmal\u0131d\u0131r. Gerek frontend gerekse de backend geli\u015ftirmeleri yap\u0131l\u0131rken ilk olarak yap\u0131lan geli\u015ftirme i\u00e7in test yaz\u0131lmal\u0131d\u0131r. Test yaz\u0131lmadan kabul edilen code reviewlardan ekip liderleri sorumlu olacakt\u0131r.","title":"Kapsam"},{"location":"slaytlar/slide2/#test_stratejisi_1","text":"","title":"Test Stratejisi"},{"location":"slaytlar/slide2/#yaklasm","text":"Yap\u0131lan her geli\u015ftirme i\u00e7in problemi kapsayacak kadar unit test yaz\u0131lmal\u0131d\u0131r. \u00c7e\u015fitli servislerin, 3. parti API'lar\u0131n ve sistemin entegrasyonunu kontrol edebilmek i\u00e7in belli aral\u0131klarla smoke testler, performance testleri ve integration testleri yaz\u0131labilir.","title":"Yakla\u015f\u0131m"},{"location":"slaytlar/slide2/#test_stratejisi_2","text":"","title":"Test Stratejisi"},{"location":"slaytlar/slide2/#ortam","text":"Her bir veritaban\u0131 modeli i\u00e7in seeder yaz\u0131lmal\u0131 ve hangi ortamda test yap\u0131l\u0131rsa yap\u0131ls\u0131n bu seederlar ile veri \u00fcretilmelidir. Mikroservislerin teker teker testi i\u00e7in Docker y\u00fckl\u00fc ve \u00e7al\u0131\u015f\u0131yor olan herhangi bir cihaz \u00fczerinde testler yap\u0131labilir. Pull Request yap\u0131ld\u0131\u011f\u0131nda \u00f6nceden belirlenmi\u015f olan pipeline \u00fczerinden automated testler \u00e7al\u0131\u015ft\u0131r\u0131l\u0131r. Linux tabanl\u0131 cihazlar tercih edilmelidir. Kritik dosyalar ve veritabanlar\u0131 herhangi bir testten \u00f6nce mutlaka yedeklenmelidir ki herhangi bir veri kayb\u0131 ya\u015fanmas\u0131n.","title":"Ortam"},{"location":"slaytlar/slide2/#test_stratejisi_3","text":"","title":"Test Stratejisi"},{"location":"slaytlar/slide2/#araclar","text":"Test yazarken kullan\u0131lan framework\u00fcn sunmu\u015f oldu\u011fu test yap\u0131s\u0131 kullan\u0131lmal\u0131d\u0131r. \u00d6zellikle unit testlerin proje ile tam entegre olmas\u0131 beklenir. Load testing ve proje b\u00fct\u00fcn\u00fcn\u00fcn testlerinde arac\u0131 programlar kullan\u0131labilir ve kullan\u0131lmal\u0131d\u0131r.","title":"Ara\u00e7lar"},{"location":"slaytlar/slide2/#test_stratejisi_4","text":"","title":"Test Stratejisi"},{"location":"slaytlar/slide2/#yaynlama","text":"Herhangi bir test i\u00e7ermeyen veya hata veren testleri bulunan pull requestler kesinlikle kabul edilemez. \u00c7\u00f6zmek istenen probleme uygun test mutlaka ve mutlaka yaz\u0131lmal\u0131d\u0131r. Testleri ba\u015far\u0131yla ge\u00e7en pull requestler ekip liderlerince projeye merge edilebilir.","title":"Yay\u0131nlama"},{"location":"slaytlar/slide2/#dokumanlarmz_ack_kaynakl","text":"","title":"Dok\u00fcmanlar\u0131m\u0131z A\u00e7\u0131k Kaynakl\u0131"}]}